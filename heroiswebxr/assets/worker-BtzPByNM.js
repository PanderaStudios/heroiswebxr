const d="data:application/javascript;base64,!function(){"use strict";
/**
	 * @license
	 * Copyright 2010-2025 Three.js Authors
	 * SPDX-License-Identifier: MIT
	 */const t="177",e=1001,i=1006,s=2e3;class r{addEventListener(t,e){void 0===this._listeners&&(this._listeners={});const i=this._listeners;void 0===i[t]&&(i[t]=[]),-1===i[t].indexOf(e)&&i[t].push(e)}hasEventListener(t,e){const i=this._listeners;return void 0!==i&&(void 0!==i[t]&&-1!==i[t].indexOf(e))}removeEventListener(t,e){const i=this._listeners;if(void 0===i)return;const s=i[t];if(void 0!==s){const t=s.indexOf(e);-1!==t&&s.splice(t,1)}}dispatchEvent(t){const e=this._listeners;if(void 0===e)return;const i=e[t.type];if(void 0!==i){t.target=this;const e=i.slice(0);for(let i=0,s=e.length;i<s;i++)e[i].call(this,t);t.target=null}}}const n=["00","01","02","03","04","05","06","07","08","09","0a","0b","0c","0d","0e","0f","10","11","12","13","14","15","16","17","18","19","1a","1b","1c","1d","1e","1f","20","21","22","23","24","25","26","27","28","29","2a","2b","2c","2d","2e","2f","30","31","32","33","34","35","36","37","38","39","3a","3b","3c","3d","3e","3f","40","41","42","43","44","45","46","47","48","49","4a","4b","4c","4d","4e","4f","50","51","52","53","54","55","56","57","58","59","5a","5b","5c","5d","5e","5f","60","61","62","63","64","65","66","67","68","69","6a","6b","6c","6d","6e","6f","70","71","72","73","74","75","76","77","78","79","7a","7b","7c","7d","7e","7f","80","81","82","83","84","85","86","87","88","89","8a","8b","8c","8d","8e","8f","90","91","92","93","94","95","96","97","98","99","9a","9b","9c","9d","9e","9f","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","aa","ab","ac","ad","ae","af","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","ba","bb","bc","bd","be","bf","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","ca","cb","cc","cd","ce","cf","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","da","db","dc","dd","de","df","e0","e1","e2","e3","e4","e5","e6","e7","e8","e9","ea","eb","ec","ed","ee","ef","f0","f1","f2","f3","f4","f5","f6","f7","f8","f9","fa","fb","fc","fd","fe","ff"];function a(){const t=4294967295*Math.random()|0,e=4294967295*Math.random()|0,i=4294967295*Math.random()|0,s=4294967295*Math.random()|0;return(n[255&t]+n[t>>8&255]+n[t>>16&255]+n[t>>24&255]+"-"+n[255&e]+n[e>>8&255]+"-"+n[e>>16&15|64]+n[e>>24&255]+"-"+n[63&i|128]+n[i>>8&255]+"-"+n[i>>16&255]+n[i>>24&255]+n[255&s]+n[s>>8&255]+n[s>>16&255]+n[s>>24&255]).toLowerCase()}function o(t,e,i){return Math.max(e,Math.min(i,t))}function h(t,e){switch(e.constructor){case Float32Array:return t;case Uint32Array:return t/4294967295;case Uint16Array:return t/65535;case Uint8Array:return t/255;case Int32Array:return Math.max(t/2147483647,-1);case Int16Array:return Math.max(t/32767,-1);case Int8Array:return Math.max(t/127,-1);default:throw new Error("Invalid component type.")}}function c(t,e){switch(e.constructor){case Float32Array:return t;case Uint32Array:return Math.round(4294967295*t);case Uint16Array:return Math.round(65535*t);case Uint8Array:return Math.round(255*t);case Int32Array:return Math.round(2147483647*t);case Int16Array:return Math.round(32767*t);case Int8Array:return Math.round(127*t);default:throw new Error("Invalid component type.")}}class l{constructor(t=0,e=0){l.prototype.isVector2=!0,this.x=t,this.y=e}get width(){return this.x}set width(t){this.x=t}get height(){return this.y}set height(t){this.y=t}set(t,e){return this.x=t,this.y=e,this}setScalar(t){return this.x=t,this.y=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y)}copy(t){return this.x=t.x,this.y=t.y,this}add(t){return this.x+=t.x,this.y+=t.y,this}addScalar(t){return this.x+=t,this.y+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this}sub(t){return this.x-=t.x,this.y-=t.y,this}subScalar(t){return this.x-=t,this.y-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this}multiply(t){return this.x*=t.x,this.y*=t.y,this}multiplyScalar(t){return this.x*=t,this.y*=t,this}divide(t){return this.x/=t.x,this.y/=t.y,this}divideScalar(t){return this.multiplyScalar(1/t)}applyMatrix3(t){const e=this.x,i=this.y,s=t.elements;return this.x=s[0]*e+s[3]*i+s[6],this.y=s[1]*e+s[4]*i+s[7],this}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this}clamp(t,e){return this.x=o(this.x,t.x,e.x),this.y=o(this.y,t.y,e.y),this}clampScalar(t,e){return this.x=o(this.x,t,e),this.y=o(this.y,t,e),this}clampLength(t,e){const i=this.length();return this.divideScalar(i||1).multiplyScalar(o(i,t,e))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(t){return this.x*t.x+this.y*t.y}cross(t){return this.x*t.y-this.y*t.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}angleTo(t){const e=Math.sqrt(this.lengthSq()*t.lengthSq());if(0===e)return Math.PI/2;const i=this.dot(t)/e;return Math.acos(o(i,-1,1))}distanceTo(t){return Math.sqrt(this.distanceToSquared(t))}distanceToSquared(t){const e=this.x-t.x,i=this.y-t.y;return e*e+i*i}manhattanDistanceTo(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this}lerpVectors(t,e,i){return this.x=t.x+(e.x-t.x)*i,this.y=t.y+(e.y-t.y)*i,this}equals(t){return t.x===this.x&&t.y===this.y}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t}fromBufferAttribute(t,e){return this.x=t.getX(e),this.y=t.getY(e),this}rotateAround(t,e){const i=Math.cos(e),s=Math.sin(e),r=this.x-t.x,n=this.y-t.y;return this.x=r*i-n*s+t.x,this.y=r*s+n*i+t.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}}class u{constructor(t=0,e=0,i=0,s=1){this.isQuaternion=!0,this._x=t,this._y=e,this._z=i,this._w=s}static slerpFlat(t,e,i,s,r,n,a){let o=i[s+0],h=i[s+1],c=i[s+2],l=i[s+3];const u=r[n+0],d=r[n+1],m=r[n+2],p=r[n+3];if(0===a)return t[e+0]=o,t[e+1]=h,t[e+2]=c,void(t[e+3]=l);if(1===a)return t[e+0]=u,t[e+1]=d,t[e+2]=m,void(t[e+3]=p);if(l!==p||o!==u||h!==d||c!==m){let t=1-a;const e=o*u+h*d+c*m+l*p,i=e>=0?1:-1,s=1-e*e;if(s>Number.EPSILON){const r=Math.sqrt(s),n=Math.atan2(r,e*i);t=Math.sin(t*n)/r,a=Math.sin(a*n)/r}const r=a*i;if(o=o*t+u*r,h=h*t+d*r,c=c*t+m*r,l=l*t+p*r,t===1-a){const t=1/Math.sqrt(o*o+h*h+c*c+l*l);o*=t,h*=t,c*=t,l*=t}}t[e]=o,t[e+1]=h,t[e+2]=c,t[e+3]=l}static multiplyQuaternionsFlat(t,e,i,s,r,n){const a=i[s],o=i[s+1],h=i[s+2],c=i[s+3],l=r[n],u=r[n+1],d=r[n+2],m=r[n+3];return t[e]=a*m+c*l+o*d-h*u,t[e+1]=o*m+c*u+h*l-a*d,t[e+2]=h*m+c*d+a*u-o*l,t[e+3]=c*m-a*l-o*u-h*d,t}get x(){return this._x}set x(t){this._x=t,this._onChangeCallback()}get y(){return this._y}set y(t){this._y=t,this._onChangeCallback()}get z(){return this._z}set z(t){this._z=t,this._onChangeCallback()}get w(){return this._w}set w(t){this._w=t,this._onChangeCallback()}set(t,e,i,s){return this._x=t,this._y=e,this._z=i,this._w=s,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(t){return this._x=t.x,this._y=t.y,this._z=t.z,this._w=t.w,this._onChangeCallback(),this}setFromEuler(t,e=!0){const i=t._x,s=t._y,r=t._z,n=t._order,a=Math.cos,o=Math.sin,h=a(i/2),c=a(s/2),l=a(r/2),u=o(i/2),d=o(s/2),m=o(r/2);switch(n){case"XYZ":this._x=u*c*l+h*d*m,this._y=h*d*l-u*c*m,this._z=h*c*m+u*d*l,this._w=h*c*l-u*d*m;break;case"YXZ":this._x=u*c*l+h*d*m,this._y=h*d*l-u*c*m,this._z=h*c*m-u*d*l,this._w=h*c*l+u*d*m;break;case"ZXY":this._x=u*c*l-h*d*m,this._y=h*d*l+u*c*m,this._z=h*c*m+u*d*l,this._w=h*c*l-u*d*m;break;case"ZYX":this._x=u*c*l-h*d*m,this._y=h*d*l+u*c*m,this._z=h*c*m-u*d*l,this._w=h*c*l+u*d*m;break;case"YZX":this._x=u*c*l+h*d*m,this._y=h*d*l+u*c*m,this._z=h*c*m-u*d*l,this._w=h*c*l-u*d*m;break;case"XZY":this._x=u*c*l-h*d*m,this._y=h*d*l-u*c*m,this._z=h*c*m+u*d*l,this._w=h*c*l+u*d*m}return!0===e&&this._onChangeCallback(),this}setFromAxisAngle(t,e){const i=e/2,s=Math.sin(i);return this._x=t.x*s,this._y=t.y*s,this._z=t.z*s,this._w=Math.cos(i),this._onChangeCallback(),this}setFromRotationMatrix(t){const e=t.elements,i=e[0],s=e[4],r=e[8],n=e[1],a=e[5],o=e[9],h=e[2],c=e[6],l=e[10],u=i+a+l;if(u>0){const t=.5/Math.sqrt(u+1);this._w=.25/t,this._x=(c-o)*t,this._y=(r-h)*t,this._z=(n-s)*t}else if(i>a&&i>l){const t=2*Math.sqrt(1+i-a-l);this._w=(c-o)/t,this._x=.25*t,this._y=(s+n)/t,this._z=(r+h)/t}else if(a>l){const t=2*Math.sqrt(1+a-i-l);this._w=(r-h)/t,this._x=(s+n)/t,this._y=.25*t,this._z=(o+c)/t}else{const t=2*Math.sqrt(1+l-i-a);this._w=(n-s)/t,this._x=(r+h)/t,this._y=(o+c)/t,this._z=.25*t}return this._onChangeCallback(),this}setFromUnitVectors(t,e){let i=t.dot(e)+1;return i<Number.EPSILON?(i=0,Math.abs(t.x)>Math.abs(t.z)?(this._x=-t.y,this._y=t.x,this._z=0,this._w=i):(this._x=0,this._y=-t.z,this._z=t.y,this._w=i)):(this._x=t.y*e.z-t.z*e.y,this._y=t.z*e.x-t.x*e.z,this._z=t.x*e.y-t.y*e.x,this._w=i),this.normalize()}angleTo(t){return 2*Math.acos(Math.abs(o(this.dot(t),-1,1)))}rotateTowards(t,e){const i=this.angleTo(t);if(0===i)return this;const s=Math.min(1,e/i);return this.slerp(t,s),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(t){return this._x*t._x+this._y*t._y+this._z*t._z+this._w*t._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let t=this.length();return 0===t?(this._x=0,this._y=0,this._z=0,this._w=1):(t=1/t,this._x=this._x*t,this._y=this._y*t,this._z=this._z*t,this._w=this._w*t),this._onChangeCallback(),this}multiply(t){return this.multiplyQuaternions(this,t)}premultiply(t){return this.multiplyQuaternions(t,this)}multiplyQuaternions(t,e){const i=t._x,s=t._y,r=t._z,n=t._w,a=e._x,o=e._y,h=e._z,c=e._w;return this._x=i*c+n*a+s*h-r*o,this._y=s*c+n*o+r*a-i*h,this._z=r*c+n*h+i*o-s*a,this._w=n*c-i*a-s*o-r*h,this._onChangeCallback(),this}slerp(t,e){if(0===e)return this;if(1===e)return this.copy(t);const i=this._x,s=this._y,r=this._z,n=this._w;let a=n*t._w+i*t._x+s*t._y+r*t._z;if(a<0?(this._w=-t._w,this._x=-t._x,this._y=-t._y,this._z=-t._z,a=-a):this.copy(t),a>=1)return this._w=n,this._x=i,this._y=s,this._z=r,this;const o=1-a*a;if(o<=Number.EPSILON){const t=1-e;return this._w=t*n+e*this._w,this._x=t*i+e*this._x,this._y=t*s+e*this._y,this._z=t*r+e*this._z,this.normalize(),this}const h=Math.sqrt(o),c=Math.atan2(h,a),l=Math.sin((1-e)*c)/h,u=Math.sin(e*c)/h;return this._w=n*l+this._w*u,this._x=i*l+this._x*u,this._y=s*l+this._y*u,this._z=r*l+this._z*u,this._onChangeCallback(),this}slerpQuaternions(t,e,i){return this.copy(t).slerp(e,i)}random(){const t=2*Math.PI*Math.random(),e=2*Math.PI*Math.random(),i=Math.random(),s=Math.sqrt(1-i),r=Math.sqrt(i);return this.set(s*Math.sin(t),s*Math.cos(t),r*Math.sin(e),r*Math.cos(e))}equals(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._w===this._w}fromArray(t,e=0){return this._x=t[e],this._y=t[e+1],this._z=t[e+2],this._w=t[e+3],this._onChangeCallback(),this}toArray(t=[],e=0){return t[e]=this._x,t[e+1]=this._y,t[e+2]=this._z,t[e+3]=this._w,t}fromBufferAttribute(t,e){return this._x=t.getX(e),this._y=t.getY(e),this._z=t.getZ(e),this._w=t.getW(e),this._onChangeCallback(),this}toJSON(){return this.toArray()}_onChange(t){return this._onChangeCallback=t,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._w}}class d{constructor(t=0,e=0,i=0){d.prototype.isVector3=!0,this.x=t,this.y=e,this.z=i}set(t,e,i){return void 0===i&&(i=this.z),this.x=t,this.y=e,this.z=i,this}setScalar(t){return this.x=t,this.y=t,this.z=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setZ(t){return this.z=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;case 2:this.z=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this}add(t){return this.x+=t.x,this.y+=t.y,this.z+=t.z,this}addScalar(t){return this.x+=t,this.y+=t,this.z+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this.z=t.z+e.z,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this.z+=t.z*e,this}sub(t){return this.x-=t.x,this.y-=t.y,this.z-=t.z,this}subScalar(t){return this.x-=t,this.y-=t,this.z-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this.z=t.z-e.z,this}multiply(t){return this.x*=t.x,this.y*=t.y,this.z*=t.z,this}multiplyScalar(t){return this.x*=t,this.y*=t,this.z*=t,this}multiplyVectors(t,e){return this.x=t.x*e.x,this.y=t.y*e.y,this.z=t.z*e.z,this}applyEuler(t){return this.applyQuaternion(p.setFromEuler(t))}applyAxisAngle(t,e){return this.applyQuaternion(p.setFromAxisAngle(t,e))}applyMatrix3(t){const e=this.x,i=this.y,s=this.z,r=t.elements;return this.x=r[0]*e+r[3]*i+r[6]*s,this.y=r[1]*e+r[4]*i+r[7]*s,this.z=r[2]*e+r[5]*i+r[8]*s,this}applyNormalMatrix(t){return this.applyMatrix3(t).normalize()}applyMatrix4(t){const e=this.x,i=this.y,s=this.z,r=t.elements,n=1/(r[3]*e+r[7]*i+r[11]*s+r[15]);return this.x=(r[0]*e+r[4]*i+r[8]*s+r[12])*n,this.y=(r[1]*e+r[5]*i+r[9]*s+r[13])*n,this.z=(r[2]*e+r[6]*i+r[10]*s+r[14])*n,this}applyQuaternion(t){const e=this.x,i=this.y,s=this.z,r=t.x,n=t.y,a=t.z,o=t.w,h=2*(n*s-a*i),c=2*(a*e-r*s),l=2*(r*i-n*e);return this.x=e+o*h+n*l-a*c,this.y=i+o*c+a*h-r*l,this.z=s+o*l+r*c-n*h,this}project(t){return this.applyMatrix4(t.matrixWorldInverse).applyMatrix4(t.projectionMatrix)}unproject(t){return this.applyMatrix4(t.projectionMatrixInverse).applyMatrix4(t.matrixWorld)}transformDirection(t){const e=this.x,i=this.y,s=this.z,r=t.elements;return this.x=r[0]*e+r[4]*i+r[8]*s,this.y=r[1]*e+r[5]*i+r[9]*s,this.z=r[2]*e+r[6]*i+r[10]*s,this.normalize()}divide(t){return this.x/=t.x,this.y/=t.y,this.z/=t.z,this}divideScalar(t){return this.multiplyScalar(1/t)}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this}clamp(t,e){return this.x=o(this.x,t.x,e.x),this.y=o(this.y,t.y,e.y),this.z=o(this.z,t.z,e.z),this}clampScalar(t,e){return this.x=o(this.x,t,e),this.y=o(this.y,t,e),this.z=o(this.z,t,e),this}clampLength(t,e){const i=this.length();return this.divideScalar(i||1).multiplyScalar(o(i,t,e))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this.z+=(t.z-this.z)*e,this}lerpVectors(t,e,i){return this.x=t.x+(e.x-t.x)*i,this.y=t.y+(e.y-t.y)*i,this.z=t.z+(e.z-t.z)*i,this}cross(t){return this.crossVectors(this,t)}crossVectors(t,e){const i=t.x,s=t.y,r=t.z,n=e.x,a=e.y,o=e.z;return this.x=s*o-r*a,this.y=r*n-i*o,this.z=i*a-s*n,this}projectOnVector(t){const e=t.lengthSq();if(0===e)return this.set(0,0,0);const i=t.dot(this)/e;return this.copy(t).multiplyScalar(i)}projectOnPlane(t){return m.copy(this).projectOnVector(t),this.sub(m)}reflect(t){return this.sub(m.copy(t).multiplyScalar(2*this.dot(t)))}angleTo(t){const e=Math.sqrt(this.lengthSq()*t.lengthSq());if(0===e)return Math.PI/2;const i=this.dot(t)/e;return Math.acos(o(i,-1,1))}distanceTo(t){return Math.sqrt(this.distanceToSquared(t))}distanceToSquared(t){const e=this.x-t.x,i=this.y-t.y,s=this.z-t.z;return e*e+i*i+s*s}manhattanDistanceTo(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)+Math.abs(this.z-t.z)}setFromSpherical(t){return this.setFromSphericalCoords(t.radius,t.phi,t.theta)}setFromSphericalCoords(t,e,i){const s=Math.sin(e)*t;return this.x=s*Math.sin(i),this.y=Math.cos(e)*t,this.z=s*Math.cos(i),this}setFromCylindrical(t){return this.setFromCylindricalCoords(t.radius,t.theta,t.y)}setFromCylindricalCoords(t,e,i){return this.x=t*Math.sin(e),this.y=i,this.z=t*Math.cos(e),this}setFromMatrixPosition(t){const e=t.elements;return this.x=e[12],this.y=e[13],this.z=e[14],this}setFromMatrixScale(t){const e=this.setFromMatrixColumn(t,0).length(),i=this.setFromMatrixColumn(t,1).length(),s=this.setFromMatrixColumn(t,2).length();return this.x=e,this.y=i,this.z=s,this}setFromMatrixColumn(t,e){return this.fromArray(t.elements,4*e)}setFromMatrix3Column(t,e){return this.fromArray(t.elements,3*e)}setFromEuler(t){return this.x=t._x,this.y=t._y,this.z=t._z,this}setFromColor(t){return this.x=t.r,this.y=t.g,this.z=t.b,this}equals(t){return t.x===this.x&&t.y===this.y&&t.z===this.z}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this.z=t[e+2],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t[e+2]=this.z,t}fromBufferAttribute(t,e){return this.x=t.getX(e),this.y=t.getY(e),this.z=t.getZ(e),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){const t=Math.random()*Math.PI*2,e=2*Math.random()-1,i=Math.sqrt(1-e*e);return this.x=i*Math.cos(t),this.y=e,this.z=i*Math.sin(t),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}}const m=new d,p=new u;class y{constructor(t,e,i,s,r,n,a,o,h){y.prototype.isMatrix3=!0,this.elements=[1,0,0,0,1,0,0,0,1],void 0!==t&&this.set(t,e,i,s,r,n,a,o,h)}set(t,e,i,s,r,n,a,o,h){const c=this.elements;return c[0]=t,c[1]=s,c[2]=a,c[3]=e,c[4]=r,c[5]=o,c[6]=i,c[7]=n,c[8]=h,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(t){const e=this.elements,i=t.elements;return e[0]=i[0],e[1]=i[1],e[2]=i[2],e[3]=i[3],e[4]=i[4],e[5]=i[5],e[6]=i[6],e[7]=i[7],e[8]=i[8],this}extractBasis(t,e,i){return t.setFromMatrix3Column(this,0),e.setFromMatrix3Column(this,1),i.setFromMatrix3Column(this,2),this}setFromMatrix4(t){const e=t.elements;return this.set(e[0],e[4],e[8],e[1],e[5],e[9],e[2],e[6],e[10]),this}multiply(t){return this.multiplyMatrices(this,t)}premultiply(t){return this.multiplyMatrices(t,this)}multiplyMatrices(t,e){const i=t.elements,s=e.elements,r=this.elements,n=i[0],a=i[3],o=i[6],h=i[1],c=i[4],l=i[7],u=i[2],d=i[5],m=i[8],p=s[0],y=s[3],x=s[6],f=s[1],g=s[4],w=s[7],b=s[2],M=s[5],z=s[8];return r[0]=n*p+a*f+o*b,r[3]=n*y+a*g+o*M,r[6]=n*x+a*w+o*z,r[1]=h*p+c*f+l*b,r[4]=h*y+c*g+l*M,r[7]=h*x+c*w+l*z,r[2]=u*p+d*f+m*b,r[5]=u*y+d*g+m*M,r[8]=u*x+d*w+m*z,this}multiplyScalar(t){const e=this.elements;return e[0]*=t,e[3]*=t,e[6]*=t,e[1]*=t,e[4]*=t,e[7]*=t,e[2]*=t,e[5]*=t,e[8]*=t,this}determinant(){const t=this.elements,e=t[0],i=t[1],s=t[2],r=t[3],n=t[4],a=t[5],o=t[6],h=t[7],c=t[8];return e*n*c-e*a*h-i*r*c+i*a*o+s*r*h-s*n*o}invert(){const t=this.elements,e=t[0],i=t[1],s=t[2],r=t[3],n=t[4],a=t[5],o=t[6],h=t[7],c=t[8],l=c*n-a*h,u=a*o-c*r,d=h*r-n*o,m=e*l+i*u+s*d;if(0===m)return this.set(0,0,0,0,0,0,0,0,0);const p=1/m;return t[0]=l*p,t[1]=(s*h-c*i)*p,t[2]=(a*i-s*n)*p,t[3]=u*p,t[4]=(c*e-s*o)*p,t[5]=(s*r-a*e)*p,t[6]=d*p,t[7]=(i*o-h*e)*p,t[8]=(n*e-i*r)*p,this}transpose(){let t;const e=this.elements;return t=e[1],e[1]=e[3],e[3]=t,t=e[2],e[2]=e[6],e[6]=t,t=e[5],e[5]=e[7],e[7]=t,this}getNormalMatrix(t){return this.setFromMatrix4(t).invert().transpose()}transposeIntoArray(t){const e=this.elements;return t[0]=e[0],t[1]=e[3],t[2]=e[6],t[3]=e[1],t[4]=e[4],t[5]=e[7],t[6]=e[2],t[7]=e[5],t[8]=e[8],this}setUvTransform(t,e,i,s,r,n,a){const o=Math.cos(r),h=Math.sin(r);return this.set(i*o,i*h,-i*(o*n+h*a)+n+t,-s*h,s*o,-s*(-h*n+o*a)+a+e,0,0,1),this}scale(t,e){return this.premultiply(x.makeScale(t,e)),this}rotate(t){return this.premultiply(x.makeRotation(-t)),this}translate(t,e){return this.premultiply(x.makeTranslation(t,e)),this}makeTranslation(t,e){return t.isVector2?this.set(1,0,t.x,0,1,t.y,0,0,1):this.set(1,0,t,0,1,e,0,0,1),this}makeRotation(t){const e=Math.cos(t),i=Math.sin(t);return this.set(e,-i,0,i,e,0,0,0,1),this}makeScale(t,e){return this.set(t,0,0,0,e,0,0,0,1),this}equals(t){const e=this.elements,i=t.elements;for(let t=0;t<9;t++)if(e[t]!==i[t])return!1;return!0}fromArray(t,e=0){for(let i=0;i<9;i++)this.elements[i]=t[i+e];return this}toArray(t=[],e=0){const i=this.elements;return t[e]=i[0],t[e+1]=i[1],t[e+2]=i[2],t[e+3]=i[3],t[e+4]=i[4],t[e+5]=i[5],t[e+6]=i[6],t[e+7]=i[7],t[e+8]=i[8],t}clone(){return(new this.constructor).fromArray(this.elements)}}const x=new y;function f(t){return document.createElementNS("http://www.w3.org/1999/xhtml",t)}function g(t){return t<.04045?.0773993808*t:Math.pow(.9478672986*t+.0521327014,2.4)}let w;class b{static getDataURL(t,e="image/png"){if(/^data:/i.test(t.src))return t.src;if("undefined"==typeof HTMLCanvasElement)return t.src;let i;if(t instanceof HTMLCanvasElement)i=t;else{void 0===w&&(w=f("canvas")),w.width=t.width,w.height=t.height;const e=w.getContext("2d");t instanceof ImageData?e.putImageData(t,0,0):e.drawImage(t,0,0,t.width,t.height),i=w}return i.toDataURL(e)}static sRGBToLinear(t){if("undefined"!=typeof HTMLImageElement&&t instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&t instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&t instanceof ImageBitmap){const e=f("canvas");e.width=t.width,e.height=t.height;const i=e.getContext("2d");i.drawImage(t,0,0,t.width,t.height);const s=i.getImageData(0,0,t.width,t.height),r=s.data;for(let t=0;t<r.length;t++)r[t]=255*g(r[t]/255);return i.putImageData(s,0,0),e}if(t.data){const e=t.data.slice(0);for(let t=0;t<e.length;t++)e instanceof Uint8Array||e instanceof Uint8ClampedArray?e[t]=Math.floor(255*g(e[t]/255)):e[t]=g(e[t]);return{data:e,width:t.width,height:t.height}}return t}}let M=0;class z{constructor(t=null){this.isSource=!0,Object.defineProperty(this,"id",{value:M++}),this.uuid=a(),this.data=t,this.dataReady=!0,this.version=0}getSize(t){const e=this.data;return e instanceof HTMLVideoElement?t.set(e.videoWidth,e.videoHeight):null!==e?t.set(e.width,e.height,e.depth||0):t.set(0,0,0),t}set needsUpdate(t){!0===t&&this.version++}toJSON(t){const e=void 0===t||"string"==typeof t;if(!e&&void 0!==t.images[this.uuid])return t.images[this.uuid];const i={uuid:this.uuid,url:""},s=this.data;if(null!==s){let t;if(Array.isArray(s)){t=[];for(let e=0,i=s.length;e<i;e++)s[e].isDataTexture?t.push(v(s[e].image)):t.push(v(s[e]))}else t=v(s);i.url=t}return e||(t.images[this.uuid]=i),i}}function v(t){return"undefined"!=typeof HTMLImageElement&&t instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&t instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&t instanceof ImageBitmap?b.getDataURL(t):t.data?{data:Array.from(t.data),width:t.width,height:t.height,type:t.data.constructor.name}:{}}let _=0;const A=new d;class S extends r{constructor(t=S.DEFAULT_IMAGE,e=S.DEFAULT_MAPPING,i=1001,s=1001,r=1006,n=1008,o=1023,h=1009,c=S.DEFAULT_ANISOTROPY,u=""){super(),this.isTexture=!0,Object.defineProperty(this,"id",{value:_++}),this.uuid=a(),this.name="",this.source=new z(t),this.mipmaps=[],this.mapping=e,this.channel=0,this.wrapS=i,this.wrapT=s,this.magFilter=r,this.minFilter=n,this.anisotropy=c,this.format=o,this.internalFormat=null,this.type=h,this.offset=new l(0,0),this.repeat=new l(1,1),this.center=new l(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new y,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.colorSpace=u,this.userData={},this.updateRanges=[],this.version=0,this.onUpdate=null,this.renderTarget=null,this.isRenderTargetTexture=!1,this.isArrayTexture=!!(t&&t.depth&&t.depth>1),this.pmremVersion=0}get width(){return this.source.getSize(A).x}get height(){return this.source.getSize(A).y}get depth(){return this.source.getSize(A).z}get image(){return this.source.data}set image(t=null){this.source.data=t}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}addUpdateRange(t,e){this.updateRanges.push({start:t,count:e})}clearUpdateRanges(){this.updateRanges.length=0}clone(){return(new this.constructor).copy(this)}copy(t){return this.name=t.name,this.source=t.source,this.mipmaps=t.mipmaps.slice(0),this.mapping=t.mapping,this.channel=t.channel,this.wrapS=t.wrapS,this.wrapT=t.wrapT,this.magFilter=t.magFilter,this.minFilter=t.minFilter,this.anisotropy=t.anisotropy,this.format=t.format,this.internalFormat=t.internalFormat,this.type=t.type,this.offset.copy(t.offset),this.repeat.copy(t.repeat),this.center.copy(t.center),this.rotation=t.rotation,this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrix.copy(t.matrix),this.generateMipmaps=t.generateMipmaps,this.premultiplyAlpha=t.premultiplyAlpha,this.flipY=t.flipY,this.unpackAlignment=t.unpackAlignment,this.colorSpace=t.colorSpace,this.renderTarget=t.renderTarget,this.isRenderTargetTexture=t.isRenderTargetTexture,this.isArrayTexture=t.isArrayTexture,this.userData=JSON.parse(JSON.stringify(t.userData)),this.needsUpdate=!0,this}setValues(t){for(const e in t){const i=t[e];if(void 0===i)continue;const s=this[e];void 0!==s&&(s&&i&&s.isVector2&&i.isVector2||s&&i&&s.isVector3&&i.isVector3||s&&i&&s.isMatrix3&&i.isMatrix3?s.copy(i):this[e]=i)}}toJSON(t){const e=void 0===t||"string"==typeof t;if(!e&&void 0!==t.textures[this.uuid])return t.textures[this.uuid];const i={metadata:{version:4.7,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,image:this.source.toJSON(t).uuid,mapping:this.mapping,channel:this.channel,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,internalFormat:this.internalFormat,type:this.type,colorSpace:this.colorSpace,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,generateMipmaps:this.generateMipmaps,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};return Object.keys(this.userData).length>0&&(i.userData=this.userData),e||(t.textures[this.uuid]=i),i}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(t){if(300!==this.mapping)return t;if(t.applyMatrix3(this.matrix),t.x<0||t.x>1)switch(this.wrapS){case 1e3:t.x=t.x-Math.floor(t.x);break;case e:t.x=t.x<0?0:1;break;case 1002:1===Math.abs(Math.floor(t.x)%2)?t.x=Math.ceil(t.x)-t.x:t.x=t.x-Math.floor(t.x)}if(t.y<0||t.y>1)switch(this.wrapT){case 1e3:t.y=t.y-Math.floor(t.y);break;case e:t.y=t.y<0?0:1;break;case 1002:1===Math.abs(Math.floor(t.y)%2)?t.y=Math.ceil(t.y)-t.y:t.y=t.y-Math.floor(t.y)}return this.flipY&&(t.y=1-t.y),t}set needsUpdate(t){!0===t&&(this.version++,this.source.needsUpdate=!0)}set needsPMREMUpdate(t){!0===t&&this.pmremVersion++}}S.DEFAULT_IMAGE=null,S.DEFAULT_MAPPING=300,S.DEFAULT_ANISOTROPY=1;class B{constructor(t=0,e=0,i=0,s=1){B.prototype.isVector4=!0,this.x=t,this.y=e,this.z=i,this.w=s}get width(){return this.z}set width(t){this.z=t}get height(){return this.w}set height(t){this.w=t}set(t,e,i,s){return this.x=t,this.y=e,this.z=i,this.w=s,this}setScalar(t){return this.x=t,this.y=t,this.z=t,this.w=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setZ(t){return this.z=t,this}setW(t){return this.w=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;case 2:this.z=e;break;case 3:this.w=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this.w=void 0!==t.w?t.w:1,this}add(t){return this.x+=t.x,this.y+=t.y,this.z+=t.z,this.w+=t.w,this}addScalar(t){return this.x+=t,this.y+=t,this.z+=t,this.w+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this.z=t.z+e.z,this.w=t.w+e.w,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this.z+=t.z*e,this.w+=t.w*e,this}sub(t){return this.x-=t.x,this.y-=t.y,this.z-=t.z,this.w-=t.w,this}subScalar(t){return this.x-=t,this.y-=t,this.z-=t,this.w-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this.z=t.z-e.z,this.w=t.w-e.w,this}multiply(t){return this.x*=t.x,this.y*=t.y,this.z*=t.z,this.w*=t.w,this}multiplyScalar(t){return this.x*=t,this.y*=t,this.z*=t,this.w*=t,this}applyMatrix4(t){const e=this.x,i=this.y,s=this.z,r=this.w,n=t.elements;return this.x=n[0]*e+n[4]*i+n[8]*s+n[12]*r,this.y=n[1]*e+n[5]*i+n[9]*s+n[13]*r,this.z=n[2]*e+n[6]*i+n[10]*s+n[14]*r,this.w=n[3]*e+n[7]*i+n[11]*s+n[15]*r,this}divide(t){return this.x/=t.x,this.y/=t.y,this.z/=t.z,this.w/=t.w,this}divideScalar(t){return this.multiplyScalar(1/t)}setAxisAngleFromQuaternion(t){this.w=2*Math.acos(t.w);const e=Math.sqrt(1-t.w*t.w);return e<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=t.x/e,this.y=t.y/e,this.z=t.z/e),this}setAxisAngleFromRotationMatrix(t){let e,i,s,r;const n=.01,a=.1,o=t.elements,h=o[0],c=o[4],l=o[8],u=o[1],d=o[5],m=o[9],p=o[2],y=o[6],x=o[10];if(Math.abs(c-u)<n&&Math.abs(l-p)<n&&Math.abs(m-y)<n){if(Math.abs(c+u)<a&&Math.abs(l+p)<a&&Math.abs(m+y)<a&&Math.abs(h+d+x-3)<a)return this.set(1,0,0,0),this;e=Math.PI;const t=(h+1)/2,o=(d+1)/2,f=(x+1)/2,g=(c+u)/4,w=(l+p)/4,b=(m+y)/4;return t>o&&t>f?t<n?(i=0,s=.707106781,r=.707106781):(i=Math.sqrt(t),s=g/i,r=w/i):o>f?o<n?(i=.707106781,s=0,r=.707106781):(s=Math.sqrt(o),i=g/s,r=b/s):f<n?(i=.707106781,s=.707106781,r=0):(r=Math.sqrt(f),i=w/r,s=b/r),this.set(i,s,r,e),this}let f=Math.sqrt((y-m)*(y-m)+(l-p)*(l-p)+(u-c)*(u-c));return Math.abs(f)<.001&&(f=1),this.x=(y-m)/f,this.y=(l-p)/f,this.z=(u-c)/f,this.w=Math.acos((h+d+x-1)/2),this}setFromMatrixPosition(t){const e=t.elements;return this.x=e[12],this.y=e[13],this.z=e[14],this.w=e[15],this}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this.w=Math.min(this.w,t.w),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this.w=Math.max(this.w,t.w),this}clamp(t,e){return this.x=o(this.x,t.x,e.x),this.y=o(this.y,t.y,e.y),this.z=o(this.z,t.z,e.z),this.w=o(this.w,t.w,e.w),this}clampScalar(t,e){return this.x=o(this.x,t,e),this.y=o(this.y,t,e),this.z=o(this.z,t,e),this.w=o(this.w,t,e),this}clampLength(t,e){const i=this.length();return this.divideScalar(i||1).multiplyScalar(o(i,t,e))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this.w=Math.trunc(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z+this.w*t.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this.z+=(t.z-this.z)*e,this.w+=(t.w-this.w)*e,this}lerpVectors(t,e,i){return this.x=t.x+(e.x-t.x)*i,this.y=t.y+(e.y-t.y)*i,this.z=t.z+(e.z-t.z)*i,this.w=t.w+(e.w-t.w)*i,this}equals(t){return t.x===this.x&&t.y===this.y&&t.z===this.z&&t.w===this.w}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this.z=t[e+2],this.w=t[e+3],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t[e+2]=this.z,t[e+3]=this.w,t}fromBufferAttribute(t,e){return this.x=t.getX(e),this.y=t.getY(e),this.z=t.getZ(e),this.w=t.getW(e),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}}class T extends r{constructor(t=1,e=1,s={}){super(),s=Object.assign({generateMipmaps:!1,internalFormat:null,minFilter:i,depthBuffer:!0,stencilBuffer:!1,resolveDepthBuffer:!0,resolveStencilBuffer:!0,depthTexture:null,samples:0,count:1,depth:1,multiview:!1},s),this.isRenderTarget=!0,this.width=t,this.height=e,this.depth=s.depth,this.scissor=new B(0,0,t,e),this.scissorTest=!1,this.viewport=new B(0,0,t,e);const r={width:t,height:e,depth:s.depth},n=new S(r);this.textures=[];const a=s.count;for(let t=0;t<a;t++)this.textures[t]=n.clone(),this.textures[t].isRenderTargetTexture=!0,this.textures[t].renderTarget=this;this._setTextureOptions(s),this.depthBuffer=s.depthBuffer,this.stencilBuffer=s.stencilBuffer,this.resolveDepthBuffer=s.resolveDepthBuffer,this.resolveStencilBuffer=s.resolveStencilBuffer,this._depthTexture=null,this.depthTexture=s.depthTexture,this.samples=s.samples,this.multiview=s.multiview}_setTextureOptions(t={}){const e={minFilter:i,generateMipmaps:!1,flipY:!1,internalFormat:null};void 0!==t.mapping&&(e.mapping=t.mapping),void 0!==t.wrapS&&(e.wrapS=t.wrapS),void 0!==t.wrapT&&(e.wrapT=t.wrapT),void 0!==t.wrapR&&(e.wrapR=t.wrapR),void 0!==t.magFilter&&(e.magFilter=t.magFilter),void 0!==t.minFilter&&(e.minFilter=t.minFilter),void 0!==t.format&&(e.format=t.format),void 0!==t.type&&(e.type=t.type),void 0!==t.anisotropy&&(e.anisotropy=t.anisotropy),void 0!==t.colorSpace&&(e.colorSpace=t.colorSpace),void 0!==t.flipY&&(e.flipY=t.flipY),void 0!==t.generateMipmaps&&(e.generateMipmaps=t.generateMipmaps),void 0!==t.internalFormat&&(e.internalFormat=t.internalFormat);for(let t=0;t<this.textures.length;t++){this.textures[t].setValues(e)}}get texture(){return this.textures[0]}set texture(t){this.textures[0]=t}set depthTexture(t){null!==this._depthTexture&&(this._depthTexture.renderTarget=null),null!==t&&(t.renderTarget=this),this._depthTexture=t}get depthTexture(){return this._depthTexture}setSize(t,e,i=1){if(this.width!==t||this.height!==e||this.depth!==i){this.width=t,this.height=e,this.depth=i;for(let s=0,r=this.textures.length;s<r;s++)this.textures[s].image.width=t,this.textures[s].image.height=e,this.textures[s].image.depth=i,this.textures[s].isArrayTexture=this.textures[s].image.depth>1;this.dispose()}this.viewport.set(0,0,t,e),this.scissor.set(0,0,t,e)}clone(){return(new this.constructor).copy(this)}copy(t){this.width=t.width,this.height=t.height,this.depth=t.depth,this.scissor.copy(t.scissor),this.scissorTest=t.scissorTest,this.viewport.copy(t.viewport),this.textures.length=0;for(let e=0,i=t.textures.length;e<i;e++){this.textures[e]=t.textures[e].clone(),this.textures[e].isRenderTargetTexture=!0,this.textures[e].renderTarget=this;const i=Object.assign({},t.textures[e].image);this.textures[e].source=new z(i)}return this.depthBuffer=t.depthBuffer,this.stencilBuffer=t.stencilBuffer,this.resolveDepthBuffer=t.resolveDepthBuffer,this.resolveStencilBuffer=t.resolveStencilBuffer,null!==t.depthTexture&&(this.depthTexture=t.depthTexture.clone()),this.samples=t.samples,this}dispose(){this.dispatchEvent({type:"dispose"})}}class P extends T{constructor(t=1,e=1,i={}){super(t,e,i),this.isWebGLRenderTarget=!0}}class F{constructor(t=new d(1/0,1/0,1/0),e=new d(-1/0,-1/0,-1/0)){this.isBox3=!0,this.min=t,this.max=e}set(t,e){return this.min.copy(t),this.max.copy(e),this}setFromArray(t){this.makeEmpty();for(let e=0,i=t.length;e<i;e+=3)this.expandByPoint(C.fromArray(t,e));return this}setFromBufferAttribute(t){this.makeEmpty();for(let e=0,i=t.count;e<i;e++)this.expandByPoint(C.fromBufferAttribute(t,e));return this}setFromPoints(t){this.makeEmpty();for(let e=0,i=t.length;e<i;e++)this.expandByPoint(t[e]);return this}setFromCenterAndSize(t,e){const i=C.copy(e).multiplyScalar(.5);return this.min.copy(t).sub(i),this.max.copy(t).add(i),this}setFromObject(t,e=!1){return this.makeEmpty(),this.expandByObject(t,e)}clone(){return(new this.constructor).copy(this)}copy(t){return this.min.copy(t.min),this.max.copy(t.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(t){return this.isEmpty()?t.set(0,0,0):t.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(t){return this.isEmpty()?t.set(0,0,0):t.subVectors(this.max,this.min)}expandByPoint(t){return this.min.min(t),this.max.max(t),this}expandByVector(t){return this.min.sub(t),this.max.add(t),this}expandByScalar(t){return this.min.addScalar(-t),this.max.addScalar(t),this}expandByObject(t,e=!1){t.updateWorldMatrix(!1,!1);const i=t.geometry;if(void 0!==i){const s=i.getAttribute("position");if(!0===e&&void 0!==s&&!0!==t.isInstancedMesh)for(let e=0,i=s.count;e<i;e++)!0===t.isMesh?t.getVertexPosition(e,C):C.fromBufferAttribute(s,e),C.applyMatrix4(t.matrixWorld),this.expandByPoint(C);else void 0!==t.boundingBox?(null===t.boundingBox&&t.computeBoundingBox(),E.copy(t.boundingBox)):(null===i.boundingBox&&i.computeBoundingBox(),E.copy(i.boundingBox)),E.applyMatrix4(t.matrixWorld),this.union(E)}const s=t.children;for(let t=0,i=s.length;t<i;t++)this.expandByObject(s[t],e);return this}containsPoint(t){return t.x>=this.min.x&&t.x<=this.max.x&&t.y>=this.min.y&&t.y<=this.max.y&&t.z>=this.min.z&&t.z<=this.max.z}containsBox(t){return this.min.x<=t.min.x&&t.max.x<=this.max.x&&this.min.y<=t.min.y&&t.max.y<=this.max.y&&this.min.z<=t.min.z&&t.max.z<=this.max.z}getParameter(t,e){return e.set((t.x-this.min.x)/(this.max.x-this.min.x),(t.y-this.min.y)/(this.max.y-this.min.y),(t.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(t){return t.max.x>=this.min.x&&t.min.x<=this.max.x&&t.max.y>=this.min.y&&t.min.y<=this.max.y&&t.max.z>=this.min.z&&t.min.z<=this.max.z}intersectsSphere(t){return this.clampPoint(t.center,C),C.distanceToSquared(t.center)<=t.radius*t.radius}intersectsPlane(t){let e,i;return t.normal.x>0?(e=t.normal.x*this.min.x,i=t.normal.x*this.max.x):(e=t.normal.x*this.max.x,i=t.normal.x*this.min.x),t.normal.y>0?(e+=t.normal.y*this.min.y,i+=t.normal.y*this.max.y):(e+=t.normal.y*this.max.y,i+=t.normal.y*this.min.y),t.normal.z>0?(e+=t.normal.z*this.min.z,i+=t.normal.z*this.max.z):(e+=t.normal.z*this.max.z,i+=t.normal.z*this.min.z),e<=-t.constant&&i>=-t.constant}intersectsTriangle(t){if(this.isEmpty())return!1;this.getCenter(R),N.subVectors(this.max,R),k.subVectors(t.a,R),U.subVectors(t.b,R),I.subVectors(t.c,R),q.subVectors(U,k),O.subVectors(I,U),D.subVectors(k,I);let e=[0,-q.z,q.y,0,-O.z,O.y,0,-D.z,D.y,q.z,0,-q.x,O.z,0,-O.x,D.z,0,-D.x,-q.y,q.x,0,-O.y,O.x,0,-D.y,D.x,0];return!!G(e,k,U,I,N)&&(e=[1,0,0,0,1,0,0,0,1],!!G(e,k,U,I,N)&&(X.crossVectors(q,O),e=[X.x,X.y,X.z],G(e,k,U,I,N)))}clampPoint(t,e){return e.copy(t).clamp(this.min,this.max)}distanceToPoint(t){return this.clampPoint(t,C).distanceTo(t)}getBoundingSphere(t){return this.isEmpty()?t.makeEmpty():(this.getCenter(t.center),t.radius=.5*this.getSize(C).length()),t}intersect(t){return this.min.max(t.min),this.max.min(t.max),this.isEmpty()&&this.makeEmpty(),this}union(t){return this.min.min(t.min),this.max.max(t.max),this}applyMatrix4(t){return this.isEmpty()||(V[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(t),V[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(t),V[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(t),V[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(t),V[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(t),V[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(t),V[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(t),V[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(t),this.setFromPoints(V)),this}translate(t){return this.min.add(t),this.max.add(t),this}equals(t){return t.min.equals(this.min)&&t.max.equals(this.max)}toJSON(){return{min:this.min.toArray(),max:this.max.toArray()}}fromJSON(t){return this.min.fromArray(t.min),this.max.fromArray(t.max),this}}const V=[new d,new d,new d,new d,new d,new d,new d,new d],C=new d,E=new F,k=new d,U=new d,I=new d,q=new d,O=new d,D=new d,R=new d,N=new d,X=new d,W=new d;function G(t,e,i,s,r){for(let n=0,a=t.length-3;n<=a;n+=3){W.fromArray(t,n);const a=r.x*Math.abs(W.x)+r.y*Math.abs(W.y)+r.z*Math.abs(W.z),o=e.dot(W),h=i.dot(W),c=s.dot(W);if(Math.max(-Math.max(o,h,c),Math.min(o,h,c))>a)return!1}return!0}const Y=new F,L=new d,j=new d;class Z{constructor(t=new d,e=-1){this.isSphere=!0,this.center=t,this.radius=e}set(t,e){return this.center.copy(t),this.radius=e,this}setFromPoints(t,e){const i=this.center;void 0!==e?i.copy(e):Y.setFromPoints(t).getCenter(i);let s=0;for(let e=0,r=t.length;e<r;e++)s=Math.max(s,i.distanceToSquared(t[e]));return this.radius=Math.sqrt(s),this}copy(t){return this.center.copy(t.center),this.radius=t.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(t){return t.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(t){return t.distanceTo(this.center)-this.radius}intersectsSphere(t){const e=this.radius+t.radius;return t.center.distanceToSquared(this.center)<=e*e}intersectsBox(t){return t.intersectsSphere(this)}intersectsPlane(t){return Math.abs(t.distanceToPoint(this.center))<=this.radius}clampPoint(t,e){const i=this.center.distanceToSquared(t);return e.copy(t),i>this.radius*this.radius&&(e.sub(this.center).normalize(),e.multiplyScalar(this.radius).add(this.center)),e}getBoundingBox(t){return this.isEmpty()?(t.makeEmpty(),t):(t.set(this.center,this.center),t.expandByScalar(this.radius),t)}applyMatrix4(t){return this.center.applyMatrix4(t),this.radius=this.radius*t.getMaxScaleOnAxis(),this}translate(t){return this.center.add(t),this}expandByPoint(t){if(this.isEmpty())return this.center.copy(t),this.radius=0,this;L.subVectors(t,this.center);const e=L.lengthSq();if(e>this.radius*this.radius){const t=Math.sqrt(e),i=.5*(t-this.radius);this.center.addScaledVector(L,i/t),this.radius+=i}return this}union(t){return t.isEmpty()?this:this.isEmpty()?(this.copy(t),this):(!0===this.center.equals(t.center)?this.radius=Math.max(this.radius,t.radius):(j.subVectors(t.center,this.center).setLength(t.radius),this.expandByPoint(L.copy(t.center).add(j)),this.expandByPoint(L.copy(t.center).sub(j))),this)}equals(t){return t.center.equals(this.center)&&t.radius===this.radius}clone(){return(new this.constructor).copy(this)}toJSON(){return{radius:this.radius,center:this.center.toArray()}}fromJSON(t){return this.radius=t.radius,this.center.fromArray(t.center),this}}const J=new d,Q=new d,H=new d,K=new d,$=new d,tt=new d,et=new d;class it{constructor(t=new d,e=new d(0,0,-1)){this.origin=t,this.direction=e}set(t,e){return this.origin.copy(t),this.direction.copy(e),this}copy(t){return this.origin.copy(t.origin),this.direction.copy(t.direction),this}at(t,e){return e.copy(this.origin).addScaledVector(this.direction,t)}lookAt(t){return this.direction.copy(t).sub(this.origin).normalize(),this}recast(t){return this.origin.copy(this.at(t,J)),this}closestPointToPoint(t,e){e.subVectors(t,this.origin);const i=e.dot(this.direction);return i<0?e.copy(this.origin):e.copy(this.origin).addScaledVector(this.direction,i)}distanceToPoint(t){return Math.sqrt(this.distanceSqToPoint(t))}distanceSqToPoint(t){const e=J.subVectors(t,this.origin).dot(this.direction);return e<0?this.origin.distanceToSquared(t):(J.copy(this.origin).addScaledVector(this.direction,e),J.distanceToSquared(t))}distanceSqToSegment(t,e,i,s){Q.copy(t).add(e).multiplyScalar(.5),H.copy(e).sub(t).normalize(),K.copy(this.origin).sub(Q);const r=.5*t.distanceTo(e),n=-this.direction.dot(H),a=K.dot(this.direction),o=-K.dot(H),h=K.lengthSq(),c=Math.abs(1-n*n);let l,u,d,m;if(c>0)if(l=n*o-a,u=n*a-o,m=r*c,l>=0)if(u>=-m)if(u<=m){const t=1/c;l*=t,u*=t,d=l*(l+n*u+2*a)+u*(n*l+u+2*o)+h}else u=r,l=Math.max(0,-(n*u+a)),d=-l*l+u*(u+2*o)+h;else u=-r,l=Math.max(0,-(n*u+a)),d=-l*l+u*(u+2*o)+h;else u<=-m?(l=Math.max(0,-(-n*r+a)),u=l>0?-r:Math.min(Math.max(-r,-o),r),d=-l*l+u*(u+2*o)+h):u<=m?(l=0,u=Math.min(Math.max(-r,-o),r),d=u*(u+2*o)+h):(l=Math.max(0,-(n*r+a)),u=l>0?r:Math.min(Math.max(-r,-o),r),d=-l*l+u*(u+2*o)+h);else u=n>0?-r:r,l=Math.max(0,-(n*u+a)),d=-l*l+u*(u+2*o)+h;return i&&i.copy(this.origin).addScaledVector(this.direction,l),s&&s.copy(Q).addScaledVector(H,u),d}intersectSphere(t,e){J.subVectors(t.center,this.origin);const i=J.dot(this.direction),s=J.dot(J)-i*i,r=t.radius*t.radius;if(s>r)return null;const n=Math.sqrt(r-s),a=i-n,o=i+n;return o<0?null:a<0?this.at(o,e):this.at(a,e)}intersectsSphere(t){return!(t.radius<0)&&this.distanceSqToPoint(t.center)<=t.radius*t.radius}distanceToPlane(t){const e=t.normal.dot(this.direction);if(0===e)return 0===t.distanceToPoint(this.origin)?0:null;const i=-(this.origin.dot(t.normal)+t.constant)/e;return i>=0?i:null}intersectPlane(t,e){const i=this.distanceToPlane(t);return null===i?null:this.at(i,e)}intersectsPlane(t){const e=t.distanceToPoint(this.origin);if(0===e)return!0;return t.normal.dot(this.direction)*e<0}intersectBox(t,e){let i,s,r,n,a,o;const h=1/this.direction.x,c=1/this.direction.y,l=1/this.direction.z,u=this.origin;return h>=0?(i=(t.min.x-u.x)*h,s=(t.max.x-u.x)*h):(i=(t.max.x-u.x)*h,s=(t.min.x-u.x)*h),c>=0?(r=(t.min.y-u.y)*c,n=(t.max.y-u.y)*c):(r=(t.max.y-u.y)*c,n=(t.min.y-u.y)*c),i>n||r>s?null:((r>i||isNaN(i))&&(i=r),(n<s||isNaN(s))&&(s=n),l>=0?(a=(t.min.z-u.z)*l,o=(t.max.z-u.z)*l):(a=(t.max.z-u.z)*l,o=(t.min.z-u.z)*l),i>o||a>s?null:((a>i||i!=i)&&(i=a),(o<s||s!=s)&&(s=o),s<0?null:this.at(i>=0?i:s,e)))}intersectsBox(t){return null!==this.intersectBox(t,J)}intersectTriangle(t,e,i,s,r){$.subVectors(e,t),tt.subVectors(i,t),et.crossVectors($,tt);let n,a=this.direction.dot(et);if(a>0){if(s)return null;n=1}else{if(!(a<0))return null;n=-1,a=-a}K.subVectors(this.origin,t);const o=n*this.direction.dot(tt.crossVectors(K,tt));if(o<0)return null;const h=n*this.direction.dot($.cross(K));if(h<0)return null;if(o+h>a)return null;const c=-n*K.dot(et);return c<0?null:this.at(c/a,r)}applyMatrix4(t){return this.origin.applyMatrix4(t),this.direction.transformDirection(t),this}equals(t){return t.origin.equals(this.origin)&&t.direction.equals(this.direction)}clone(){return(new this.constructor).copy(this)}}class st{constructor(t,e,i,s,r,n,a,o,h,c,l,u,d,m,p,y){st.prototype.isMatrix4=!0,this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],void 0!==t&&this.set(t,e,i,s,r,n,a,o,h,c,l,u,d,m,p,y)}set(t,e,i,s,r,n,a,o,h,c,l,u,d,m,p,y){const x=this.elements;return x[0]=t,x[4]=e,x[8]=i,x[12]=s,x[1]=r,x[5]=n,x[9]=a,x[13]=o,x[2]=h,x[6]=c,x[10]=l,x[14]=u,x[3]=d,x[7]=m,x[11]=p,x[15]=y,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return(new st).fromArray(this.elements)}copy(t){const e=this.elements,i=t.elements;return e[0]=i[0],e[1]=i[1],e[2]=i[2],e[3]=i[3],e[4]=i[4],e[5]=i[5],e[6]=i[6],e[7]=i[7],e[8]=i[8],e[9]=i[9],e[10]=i[10],e[11]=i[11],e[12]=i[12],e[13]=i[13],e[14]=i[14],e[15]=i[15],this}copyPosition(t){const e=this.elements,i=t.elements;return e[12]=i[12],e[13]=i[13],e[14]=i[14],this}setFromMatrix3(t){const e=t.elements;return this.set(e[0],e[3],e[6],0,e[1],e[4],e[7],0,e[2],e[5],e[8],0,0,0,0,1),this}extractBasis(t,e,i){return t.setFromMatrixColumn(this,0),e.setFromMatrixColumn(this,1),i.setFromMatrixColumn(this,2),this}makeBasis(t,e,i){return this.set(t.x,e.x,i.x,0,t.y,e.y,i.y,0,t.z,e.z,i.z,0,0,0,0,1),this}extractRotation(t){const e=this.elements,i=t.elements,s=1/rt.setFromMatrixColumn(t,0).length(),r=1/rt.setFromMatrixColumn(t,1).length(),n=1/rt.setFromMatrixColumn(t,2).length();return e[0]=i[0]*s,e[1]=i[1]*s,e[2]=i[2]*s,e[3]=0,e[4]=i[4]*r,e[5]=i[5]*r,e[6]=i[6]*r,e[7]=0,e[8]=i[8]*n,e[9]=i[9]*n,e[10]=i[10]*n,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,this}makeRotationFromEuler(t){const e=this.elements,i=t.x,s=t.y,r=t.z,n=Math.cos(i),a=Math.sin(i),o=Math.cos(s),h=Math.sin(s),c=Math.cos(r),l=Math.sin(r);if("XYZ"===t.order){const t=n*c,i=n*l,s=a*c,r=a*l;e[0]=o*c,e[4]=-o*l,e[8]=h,e[1]=i+s*h,e[5]=t-r*h,e[9]=-a*o,e[2]=r-t*h,e[6]=s+i*h,e[10]=n*o}else if("YXZ"===t.order){const t=o*c,i=o*l,s=h*c,r=h*l;e[0]=t+r*a,e[4]=s*a-i,e[8]=n*h,e[1]=n*l,e[5]=n*c,e[9]=-a,e[2]=i*a-s,e[6]=r+t*a,e[10]=n*o}else if("ZXY"===t.order){const t=o*c,i=o*l,s=h*c,r=h*l;e[0]=t-r*a,e[4]=-n*l,e[8]=s+i*a,e[1]=i+s*a,e[5]=n*c,e[9]=r-t*a,e[2]=-n*h,e[6]=a,e[10]=n*o}else if("ZYX"===t.order){const t=n*c,i=n*l,s=a*c,r=a*l;e[0]=o*c,e[4]=s*h-i,e[8]=t*h+r,e[1]=o*l,e[5]=r*h+t,e[9]=i*h-s,e[2]=-h,e[6]=a*o,e[10]=n*o}else if("YZX"===t.order){const t=n*o,i=n*h,s=a*o,r=a*h;e[0]=o*c,e[4]=r-t*l,e[8]=s*l+i,e[1]=l,e[5]=n*c,e[9]=-a*c,e[2]=-h*c,e[6]=i*l+s,e[10]=t-r*l}else if("XZY"===t.order){const t=n*o,i=n*h,s=a*o,r=a*h;e[0]=o*c,e[4]=-l,e[8]=h*c,e[1]=t*l+r,e[5]=n*c,e[9]=i*l-s,e[2]=s*l-i,e[6]=a*c,e[10]=r*l+t}return e[3]=0,e[7]=0,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,this}makeRotationFromQuaternion(t){return this.compose(at,t,ot)}lookAt(t,e,i){const s=this.elements;return lt.subVectors(t,e),0===lt.lengthSq()&&(lt.z=1),lt.normalize(),ht.crossVectors(i,lt),0===ht.lengthSq()&&(1===Math.abs(i.z)?lt.x+=1e-4:lt.z+=1e-4,lt.normalize(),ht.crossVectors(i,lt)),ht.normalize(),ct.crossVectors(lt,ht),s[0]=ht.x,s[4]=ct.x,s[8]=lt.x,s[1]=ht.y,s[5]=ct.y,s[9]=lt.y,s[2]=ht.z,s[6]=ct.z,s[10]=lt.z,this}multiply(t){return this.multiplyMatrices(this,t)}premultiply(t){return this.multiplyMatrices(t,this)}multiplyMatrices(t,e){const i=t.elements,s=e.elements,r=this.elements,n=i[0],a=i[4],o=i[8],h=i[12],c=i[1],l=i[5],u=i[9],d=i[13],m=i[2],p=i[6],y=i[10],x=i[14],f=i[3],g=i[7],w=i[11],b=i[15],M=s[0],z=s[4],v=s[8],_=s[12],A=s[1],S=s[5],B=s[9],T=s[13],P=s[2],F=s[6],V=s[10],C=s[14],E=s[3],k=s[7],U=s[11],I=s[15];return r[0]=n*M+a*A+o*P+h*E,r[4]=n*z+a*S+o*F+h*k,r[8]=n*v+a*B+o*V+h*U,r[12]=n*_+a*T+o*C+h*I,r[1]=c*M+l*A+u*P+d*E,r[5]=c*z+l*S+u*F+d*k,r[9]=c*v+l*B+u*V+d*U,r[13]=c*_+l*T+u*C+d*I,r[2]=m*M+p*A+y*P+x*E,r[6]=m*z+p*S+y*F+x*k,r[10]=m*v+p*B+y*V+x*U,r[14]=m*_+p*T+y*C+x*I,r[3]=f*M+g*A+w*P+b*E,r[7]=f*z+g*S+w*F+b*k,r[11]=f*v+g*B+w*V+b*U,r[15]=f*_+g*T+w*C+b*I,this}multiplyScalar(t){const e=this.elements;return e[0]*=t,e[4]*=t,e[8]*=t,e[12]*=t,e[1]*=t,e[5]*=t,e[9]*=t,e[13]*=t,e[2]*=t,e[6]*=t,e[10]*=t,e[14]*=t,e[3]*=t,e[7]*=t,e[11]*=t,e[15]*=t,this}determinant(){const t=this.elements,e=t[0],i=t[4],s=t[8],r=t[12],n=t[1],a=t[5],o=t[9],h=t[13],c=t[2],l=t[6],u=t[10],d=t[14];return t[3]*(+r*o*l-s*h*l-r*a*u+i*h*u+s*a*d-i*o*d)+t[7]*(+e*o*d-e*h*u+r*n*u-s*n*d+s*h*c-r*o*c)+t[11]*(+e*h*l-e*a*d-r*n*l+i*n*d+r*a*c-i*h*c)+t[15]*(-s*a*c-e*o*l+e*a*u+s*n*l-i*n*u+i*o*c)}transpose(){const t=this.elements;let e;return e=t[1],t[1]=t[4],t[4]=e,e=t[2],t[2]=t[8],t[8]=e,e=t[6],t[6]=t[9],t[9]=e,e=t[3],t[3]=t[12],t[12]=e,e=t[7],t[7]=t[13],t[13]=e,e=t[11],t[11]=t[14],t[14]=e,this}setPosition(t,e,i){const s=this.elements;return t.isVector3?(s[12]=t.x,s[13]=t.y,s[14]=t.z):(s[12]=t,s[13]=e,s[14]=i),this}invert(){const t=this.elements,e=t[0],i=t[1],s=t[2],r=t[3],n=t[4],a=t[5],o=t[6],h=t[7],c=t[8],l=t[9],u=t[10],d=t[11],m=t[12],p=t[13],y=t[14],x=t[15],f=l*y*h-p*u*h+p*o*d-a*y*d-l*o*x+a*u*x,g=m*u*h-c*y*h-m*o*d+n*y*d+c*o*x-n*u*x,w=c*p*h-m*l*h+m*a*d-n*p*d-c*a*x+n*l*x,b=m*l*o-c*p*o-m*a*u+n*p*u+c*a*y-n*l*y,M=e*f+i*g+s*w+r*b;if(0===M)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const z=1/M;return t[0]=f*z,t[1]=(p*u*r-l*y*r-p*s*d+i*y*d+l*s*x-i*u*x)*z,t[2]=(a*y*r-p*o*r+p*s*h-i*y*h-a*s*x+i*o*x)*z,t[3]=(l*o*r-a*u*r-l*s*h+i*u*h+a*s*d-i*o*d)*z,t[4]=g*z,t[5]=(c*y*r-m*u*r+m*s*d-e*y*d-c*s*x+e*u*x)*z,t[6]=(m*o*r-n*y*r-m*s*h+e*y*h+n*s*x-e*o*x)*z,t[7]=(n*u*r-c*o*r+c*s*h-e*u*h-n*s*d+e*o*d)*z,t[8]=w*z,t[9]=(m*l*r-c*p*r-m*i*d+e*p*d+c*i*x-e*l*x)*z,t[10]=(n*p*r-m*a*r+m*i*h-e*p*h-n*i*x+e*a*x)*z,t[11]=(c*a*r-n*l*r-c*i*h+e*l*h+n*i*d-e*a*d)*z,t[12]=b*z,t[13]=(c*p*s-m*l*s+m*i*u-e*p*u-c*i*y+e*l*y)*z,t[14]=(m*a*s-n*p*s-m*i*o+e*p*o+n*i*y-e*a*y)*z,t[15]=(n*l*s-c*a*s+c*i*o-e*l*o-n*i*u+e*a*u)*z,this}scale(t){const e=this.elements,i=t.x,s=t.y,r=t.z;return e[0]*=i,e[4]*=s,e[8]*=r,e[1]*=i,e[5]*=s,e[9]*=r,e[2]*=i,e[6]*=s,e[10]*=r,e[3]*=i,e[7]*=s,e[11]*=r,this}getMaxScaleOnAxis(){const t=this.elements,e=t[0]*t[0]+t[1]*t[1]+t[2]*t[2],i=t[4]*t[4]+t[5]*t[5]+t[6]*t[6],s=t[8]*t[8]+t[9]*t[9]+t[10]*t[10];return Math.sqrt(Math.max(e,i,s))}makeTranslation(t,e,i){return t.isVector3?this.set(1,0,0,t.x,0,1,0,t.y,0,0,1,t.z,0,0,0,1):this.set(1,0,0,t,0,1,0,e,0,0,1,i,0,0,0,1),this}makeRotationX(t){const e=Math.cos(t),i=Math.sin(t);return this.set(1,0,0,0,0,e,-i,0,0,i,e,0,0,0,0,1),this}makeRotationY(t){const e=Math.cos(t),i=Math.sin(t);return this.set(e,0,i,0,0,1,0,0,-i,0,e,0,0,0,0,1),this}makeRotationZ(t){const e=Math.cos(t),i=Math.sin(t);return this.set(e,-i,0,0,i,e,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(t,e){const i=Math.cos(e),s=Math.sin(e),r=1-i,n=t.x,a=t.y,o=t.z,h=r*n,c=r*a;return this.set(h*n+i,h*a-s*o,h*o+s*a,0,h*a+s*o,c*a+i,c*o-s*n,0,h*o-s*a,c*o+s*n,r*o*o+i,0,0,0,0,1),this}makeScale(t,e,i){return this.set(t,0,0,0,0,e,0,0,0,0,i,0,0,0,0,1),this}makeShear(t,e,i,s,r,n){return this.set(1,i,r,0,t,1,n,0,e,s,1,0,0,0,0,1),this}compose(t,e,i){const s=this.elements,r=e._x,n=e._y,a=e._z,o=e._w,h=r+r,c=n+n,l=a+a,u=r*h,d=r*c,m=r*l,p=n*c,y=n*l,x=a*l,f=o*h,g=o*c,w=o*l,b=i.x,M=i.y,z=i.z;return s[0]=(1-(p+x))*b,s[1]=(d+w)*b,s[2]=(m-g)*b,s[3]=0,s[4]=(d-w)*M,s[5]=(1-(u+x))*M,s[6]=(y+f)*M,s[7]=0,s[8]=(m+g)*z,s[9]=(y-f)*z,s[10]=(1-(u+p))*z,s[11]=0,s[12]=t.x,s[13]=t.y,s[14]=t.z,s[15]=1,this}decompose(t,e,i){const s=this.elements;let r=rt.set(s[0],s[1],s[2]).length();const n=rt.set(s[4],s[5],s[6]).length(),a=rt.set(s[8],s[9],s[10]).length();this.determinant()<0&&(r=-r),t.x=s[12],t.y=s[13],t.z=s[14],nt.copy(this);const o=1/r,h=1/n,c=1/a;return nt.elements[0]*=o,nt.elements[1]*=o,nt.elements[2]*=o,nt.elements[4]*=h,nt.elements[5]*=h,nt.elements[6]*=h,nt.elements[8]*=c,nt.elements[9]*=c,nt.elements[10]*=c,e.setFromRotationMatrix(nt),i.x=r,i.y=n,i.z=a,this}makePerspective(t,e,i,r,n,a,o=2e3){const h=this.elements,c=2*n/(e-t),l=2*n/(i-r),u=(e+t)/(e-t),d=(i+r)/(i-r);let m,p;if(o===s)m=-(a+n)/(a-n),p=-2*a*n/(a-n);else{if(2001!==o)throw new Error("THREE.Matrix4.makePerspective(): Invalid coordinate system: "+o);m=-a/(a-n),p=-a*n/(a-n)}return h[0]=c,h[4]=0,h[8]=u,h[12]=0,h[1]=0,h[5]=l,h[9]=d,h[13]=0,h[2]=0,h[6]=0,h[10]=m,h[14]=p,h[3]=0,h[7]=0,h[11]=-1,h[15]=0,this}makeOrthographic(t,e,i,r,n,a,o=2e3){const h=this.elements,c=1/(e-t),l=1/(i-r),u=1/(a-n),d=(e+t)*c,m=(i+r)*l;let p,y;if(o===s)p=(a+n)*u,y=-2*u;else{if(2001!==o)throw new Error("THREE.Matrix4.makeOrthographic(): Invalid coordinate system: "+o);p=n*u,y=-1*u}return h[0]=2*c,h[4]=0,h[8]=0,h[12]=-d,h[1]=0,h[5]=2*l,h[9]=0,h[13]=-m,h[2]=0,h[6]=0,h[10]=y,h[14]=-p,h[3]=0,h[7]=0,h[11]=0,h[15]=1,this}equals(t){const e=this.elements,i=t.elements;for(let t=0;t<16;t++)if(e[t]!==i[t])return!1;return!0}fromArray(t,e=0){for(let i=0;i<16;i++)this.elements[i]=t[i+e];return this}toArray(t=[],e=0){const i=this.elements;return t[e]=i[0],t[e+1]=i[1],t[e+2]=i[2],t[e+3]=i[3],t[e+4]=i[4],t[e+5]=i[5],t[e+6]=i[6],t[e+7]=i[7],t[e+8]=i[8],t[e+9]=i[9],t[e+10]=i[10],t[e+11]=i[11],t[e+12]=i[12],t[e+13]=i[13],t[e+14]=i[14],t[e+15]=i[15],t}}const rt=new d,nt=new st,at=new d(0,0,0),ot=new d(1,1,1),ht=new d,ct=new d,lt=new d,ut=new st,dt=new u;class mt{constructor(t=0,e=0,i=0,s=mt.DEFAULT_ORDER){this.isEuler=!0,this._x=t,this._y=e,this._z=i,this._order=s}get x(){return this._x}set x(t){this._x=t,this._onChangeCallback()}get y(){return this._y}set y(t){this._y=t,this._onChangeCallback()}get z(){return this._z}set z(t){this._z=t,this._onChangeCallback()}get order(){return this._order}set order(t){this._order=t,this._onChangeCallback()}set(t,e,i,s=this._order){return this._x=t,this._y=e,this._z=i,this._order=s,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(t){return this._x=t._x,this._y=t._y,this._z=t._z,this._order=t._order,this._onChangeCallback(),this}setFromRotationMatrix(t,e=this._order,i=!0){const s=t.elements,r=s[0],n=s[4],a=s[8],h=s[1],c=s[5],l=s[9],u=s[2],d=s[6],m=s[10];switch(e){case"XYZ":this._y=Math.asin(o(a,-1,1)),Math.abs(a)<.9999999?(this._x=Math.atan2(-l,m),this._z=Math.atan2(-n,r)):(this._x=Math.atan2(d,c),this._z=0);break;case"YXZ":this._x=Math.asin(-o(l,-1,1)),Math.abs(l)<.9999999?(this._y=Math.atan2(a,m),this._z=Math.atan2(h,c)):(this._y=Math.atan2(-u,r),this._z=0);break;case"ZXY":this._x=Math.asin(o(d,-1,1)),Math.abs(d)<.9999999?(this._y=Math.atan2(-u,m),this._z=Math.atan2(-n,c)):(this._y=0,this._z=Math.atan2(h,r));break;case"ZYX":this._y=Math.asin(-o(u,-1,1)),Math.abs(u)<.9999999?(this._x=Math.atan2(d,m),this._z=Math.atan2(h,r)):(this._x=0,this._z=Math.atan2(-n,c));break;case"YZX":this._z=Math.asin(o(h,-1,1)),Math.abs(h)<.9999999?(this._x=Math.atan2(-l,c),this._y=Math.atan2(-u,r)):(this._x=0,this._y=Math.atan2(a,m));break;case"XZY":this._z=Math.asin(-o(n,-1,1)),Math.abs(n)<.9999999?(this._x=Math.atan2(d,c),this._y=Math.atan2(a,r)):(this._x=Math.atan2(-l,m),this._y=0)}return this._order=e,!0===i&&this._onChangeCallback(),this}setFromQuaternion(t,e,i){return ut.makeRotationFromQuaternion(t),this.setFromRotationMatrix(ut,e,i)}setFromVector3(t,e=this._order){return this.set(t.x,t.y,t.z,e)}reorder(t){return dt.setFromEuler(this),this.setFromQuaternion(dt,t)}equals(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._order===this._order}fromArray(t){return this._x=t[0],this._y=t[1],this._z=t[2],void 0!==t[3]&&(this._order=t[3]),this._onChangeCallback(),this}toArray(t=[],e=0){return t[e]=this._x,t[e+1]=this._y,t[e+2]=this._z,t[e+3]=this._order,t}_onChange(t){return this._onChangeCallback=t,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._order}}mt.DEFAULT_ORDER="XYZ";class pt{constructor(){this.mask=1}set(t){this.mask=1<<t>>>0}enable(t){this.mask|=1<<t}enableAll(){this.mask=-1}toggle(t){this.mask^=1<<t}disable(t){this.mask&=~(1<<t)}disableAll(){this.mask=0}test(t){return 0!==(this.mask&t.mask)}isEnabled(t){return!!(this.mask&1<<t)}}let yt=0;const xt=new d,ft=new u,gt=new st,wt=new d,bt=new d,Mt=new d,zt=new u,vt=new d(1,0,0),_t=new d(0,1,0),At=new d(0,0,1),St={type:"added"},Bt={type:"removed"},Tt={type:"childadded",child:null},Pt={type:"childremoved",child:null};class Ft extends r{constructor(){super(),this.isObject3D=!0,Object.defineProperty(this,"id",{value:yt++}),this.uuid=a(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=Ft.DEFAULT_UP.clone();const t=new d,e=new mt,i=new u,s=new d(1,1,1);e._onChange(function(){i.setFromEuler(e,!1)}),i._onChange(function(){e.setFromQuaternion(i,void 0,!1)}),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:t},rotation:{configurable:!0,enumerable:!0,value:e},quaternion:{configurable:!0,enumerable:!0,value:i},scale:{configurable:!0,enumerable:!0,value:s},modelViewMatrix:{value:new st},normalMatrix:{value:new y}}),this.matrix=new st,this.matrixWorld=new st,this.matrixAutoUpdate=Ft.DEFAULT_MATRIX_AUTO_UPDATE,this.matrixWorldAutoUpdate=Ft.DEFAULT_MATRIX_WORLD_AUTO_UPDATE,this.matrixWorldNeedsUpdate=!1,this.layers=new pt,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.customDepthMaterial=void 0,this.customDistanceMaterial=void 0,this.userData={}}onBeforeShadow(){}onAfterShadow(){}onBeforeRender(){}onAfterRender(){}applyMatrix4(t){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(t),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(t){return this.quaternion.premultiply(t),this}setRotationFromAxisAngle(t,e){this.quaternion.setFromAxisAngle(t,e)}setRotationFromEuler(t){this.quaternion.setFromEuler(t,!0)}setRotationFromMatrix(t){this.quaternion.setFromRotationMatrix(t)}setRotationFromQuaternion(t){this.quaternion.copy(t)}rotateOnAxis(t,e){return ft.setFromAxisAngle(t,e),this.quaternion.multiply(ft),this}rotateOnWorldAxis(t,e){return ft.setFromAxisAngle(t,e),this.quaternion.premultiply(ft),this}rotateX(t){return this.rotateOnAxis(vt,t)}rotateY(t){return this.rotateOnAxis(_t,t)}rotateZ(t){return this.rotateOnAxis(At,t)}translateOnAxis(t,e){return xt.copy(t).applyQuaternion(this.quaternion),this.position.add(xt.multiplyScalar(e)),this}translateX(t){return this.translateOnAxis(vt,t)}translateY(t){return this.translateOnAxis(_t,t)}translateZ(t){return this.translateOnAxis(At,t)}localToWorld(t){return this.updateWorldMatrix(!0,!1),t.applyMatrix4(this.matrixWorld)}worldToLocal(t){return this.updateWorldMatrix(!0,!1),t.applyMatrix4(gt.copy(this.matrixWorld).invert())}lookAt(t,e,i){t.isVector3?wt.copy(t):wt.set(t,e,i);const s=this.parent;this.updateWorldMatrix(!0,!1),bt.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?gt.lookAt(bt,wt,this.up):gt.lookAt(wt,bt,this.up),this.quaternion.setFromRotationMatrix(gt),s&&(gt.extractRotation(s.matrixWorld),ft.setFromRotationMatrix(gt),this.quaternion.premultiply(ft.invert()))}add(t){if(arguments.length>1){for(let t=0;t<arguments.length;t++)this.add(arguments[t]);return this}return t===this||t&&t.isObject3D&&(t.removeFromParent(),t.parent=this,this.children.push(t),t.dispatchEvent(St),Tt.child=t,this.dispatchEvent(Tt),Tt.child=null),this}remove(t){if(arguments.length>1){for(let t=0;t<arguments.length;t++)this.remove(arguments[t]);return this}const e=this.children.indexOf(t);return-1!==e&&(t.parent=null,this.children.splice(e,1),t.dispatchEvent(Bt),Pt.child=t,this.dispatchEvent(Pt),Pt.child=null),this}removeFromParent(){const t=this.parent;return null!==t&&t.remove(this),this}clear(){return this.remove(...this.children)}attach(t){return this.updateWorldMatrix(!0,!1),gt.copy(this.matrixWorld).invert(),null!==t.parent&&(t.parent.updateWorldMatrix(!0,!1),gt.multiply(t.parent.matrixWorld)),t.applyMatrix4(gt),t.removeFromParent(),t.parent=this,this.children.push(t),t.updateWorldMatrix(!1,!0),t.dispatchEvent(St),Tt.child=t,this.dispatchEvent(Tt),Tt.child=null,this}getObjectById(t){return this.getObjectByProperty("id",t)}getObjectByName(t){return this.getObjectByProperty("name",t)}getObjectByProperty(t,e){if(this[t]===e)return this;for(let i=0,s=this.children.length;i<s;i++){const s=this.children[i].getObjectByProperty(t,e);if(void 0!==s)return s}}getObjectsByProperty(t,e,i=[]){this[t]===e&&i.push(this);const s=this.children;for(let r=0,n=s.length;r<n;r++)s[r].getObjectsByProperty(t,e,i);return i}getWorldPosition(t){return this.updateWorldMatrix(!0,!1),t.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(t){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(bt,t,Mt),t}getWorldScale(t){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(bt,zt,t),t}getWorldDirection(t){this.updateWorldMatrix(!0,!1);const e=this.matrixWorld.elements;return t.set(e[8],e[9],e[10]).normalize()}raycast(){}traverse(t){t(this);const e=this.children;for(let i=0,s=e.length;i<s;i++)e[i].traverse(t)}traverseVisible(t){if(!1===this.visible)return;t(this);const e=this.children;for(let i=0,s=e.length;i<s;i++)e[i].traverseVisible(t)}traverseAncestors(t){const e=this.parent;null!==e&&(t(e),e.traverseAncestors(t))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(t){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||t)&&(!0===this.matrixWorldAutoUpdate&&(null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix)),this.matrixWorldNeedsUpdate=!1,t=!0);const e=this.children;for(let i=0,s=e.length;i<s;i++){e[i].updateMatrixWorld(t)}}updateWorldMatrix(t,e){const i=this.parent;if(!0===t&&null!==i&&i.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),!0===this.matrixWorldAutoUpdate&&(null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix)),!0===e){const t=this.children;for(let e=0,i=t.length;e<i;e++){t[e].updateWorldMatrix(!1,!0)}}}toJSON(t){const e=void 0===t||"string"==typeof t,i={};e&&(t={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{},nodes:{}},i.metadata={version:4.7,type:"Object",generator:"Object3D.toJSON"});const s={};function r(e,i){return void 0===e[i.uuid]&&(e[i.uuid]=i.toJSON(t)),i.uuid}if(s.uuid=this.uuid,s.type=this.type,""!==this.name&&(s.name=this.name),!0===this.castShadow&&(s.castShadow=!0),!0===this.receiveShadow&&(s.receiveShadow=!0),!1===this.visible&&(s.visible=!1),!1===this.frustumCulled&&(s.frustumCulled=!1),0!==this.renderOrder&&(s.renderOrder=this.renderOrder),Object.keys(this.userData).length>0&&(s.userData=this.userData),s.layers=this.layers.mask,s.matrix=this.matrix.toArray(),s.up=this.up.toArray(),!1===this.matrixAutoUpdate&&(s.matrixAutoUpdate=!1),this.isInstancedMesh&&(s.type="InstancedMesh",s.count=this.count,s.instanceMatrix=this.instanceMatrix.toJSON(),null!==this.instanceColor&&(s.instanceColor=this.instanceColor.toJSON())),this.isBatchedMesh&&(s.type="BatchedMesh",s.perObjectFrustumCulled=this.perObjectFrustumCulled,s.sortObjects=this.sortObjects,s.drawRanges=this._drawRanges,s.reservedRanges=this._reservedRanges,s.geometryInfo=this._geometryInfo.map(t=>({...t,boundingBox:t.boundingBox?t.boundingBox.toJSON():void 0,boundingSphere:t.boundingSphere?t.boundingSphere.toJSON():void 0})),s.instanceInfo=this._instanceInfo.map(t=>({...t})),s.availableInstanceIds=this._availableInstanceIds.slice(),s.availableGeometryIds=this._availableGeometryIds.slice(),s.nextIndexStart=this._nextIndexStart,s.nextVertexStart=this._nextVertexStart,s.geometryCount=this._geometryCount,s.maxInstanceCount=this._maxInstanceCount,s.maxVertexCount=this._maxVertexCount,s.maxIndexCount=this._maxIndexCount,s.geometryInitialized=this._geometryInitialized,s.matricesTexture=this._matricesTexture.toJSON(t),s.indirectTexture=this._indirectTexture.toJSON(t),null!==this._colorsTexture&&(s.colorsTexture=this._colorsTexture.toJSON(t)),null!==this.boundingSphere&&(s.boundingSphere=this.boundingSphere.toJSON()),null!==this.boundingBox&&(s.boundingBox=this.boundingBox.toJSON())),this.isScene)this.background&&(this.background.isColor?s.background=this.background.toJSON():this.background.isTexture&&(s.background=this.background.toJSON(t).uuid)),this.environment&&this.environment.isTexture&&!0!==this.environment.isRenderTargetTexture&&(s.environment=this.environment.toJSON(t).uuid);else if(this.isMesh||this.isLine||this.isPoints){s.geometry=r(t.geometries,this.geometry);const e=this.geometry.parameters;if(void 0!==e&&void 0!==e.shapes){const i=e.shapes;if(Array.isArray(i))for(let e=0,s=i.length;e<s;e++){const s=i[e];r(t.shapes,s)}else r(t.shapes,i)}}if(this.isSkinnedMesh&&(s.bindMode=this.bindMode,s.bindMatrix=this.bindMatrix.toArray(),void 0!==this.skeleton&&(r(t.skeletons,this.skeleton),s.skeleton=this.skeleton.uuid)),void 0!==this.material)if(Array.isArray(this.material)){const e=[];for(let i=0,s=this.material.length;i<s;i++)e.push(r(t.materials,this.material[i]));s.material=e}else s.material=r(t.materials,this.material);if(this.children.length>0){s.children=[];for(let e=0;e<this.children.length;e++)s.children.push(this.children[e].toJSON(t).object)}if(this.animations.length>0){s.animations=[];for(let e=0;e<this.animations.length;e++){const i=this.animations[e];s.animations.push(r(t.animations,i))}}if(e){const e=n(t.geometries),s=n(t.materials),r=n(t.textures),a=n(t.images),o=n(t.shapes),h=n(t.skeletons),c=n(t.animations),l=n(t.nodes);e.length>0&&(i.geometries=e),s.length>0&&(i.materials=s),r.length>0&&(i.textures=r),a.length>0&&(i.images=a),o.length>0&&(i.shapes=o),h.length>0&&(i.skeletons=h),c.length>0&&(i.animations=c),l.length>0&&(i.nodes=l)}return i.object=s,i;function n(t){const e=[];for(const i in t){const s=t[i];delete s.metadata,e.push(s)}return e}}clone(t){return(new this.constructor).copy(this,t)}copy(t,e=!0){if(this.name=t.name,this.up.copy(t.up),this.position.copy(t.position),this.rotation.order=t.rotation.order,this.quaternion.copy(t.quaternion),this.scale.copy(t.scale),this.matrix.copy(t.matrix),this.matrixWorld.copy(t.matrixWorld),this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrixWorldAutoUpdate=t.matrixWorldAutoUpdate,this.matrixWorldNeedsUpdate=t.matrixWorldNeedsUpdate,this.layers.mask=t.layers.mask,this.visible=t.visible,this.castShadow=t.castShadow,this.receiveShadow=t.receiveShadow,this.frustumCulled=t.frustumCulled,this.renderOrder=t.renderOrder,this.animations=t.animations.slice(),this.userData=JSON.parse(JSON.stringify(t.userData)),!0===e)for(let e=0;e<t.children.length;e++){const i=t.children[e];this.add(i.clone())}return this}}Ft.DEFAULT_UP=new d(0,1,0),Ft.DEFAULT_MATRIX_AUTO_UPDATE=!0,Ft.DEFAULT_MATRIX_WORLD_AUTO_UPDATE=!0;const Vt=new d,Ct=new d,Et=new d,kt=new d,Ut=new d,It=new d,qt=new d,Ot=new d,Dt=new d,Rt=new d,Nt=new B,Xt=new B,Wt=new B;class Gt{constructor(t=new d,e=new d,i=new d){this.a=t,this.b=e,this.c=i}static getNormal(t,e,i,s){s.subVectors(i,e),Vt.subVectors(t,e),s.cross(Vt);const r=s.lengthSq();return r>0?s.multiplyScalar(1/Math.sqrt(r)):s.set(0,0,0)}static getBarycoord(t,e,i,s,r){Vt.subVectors(s,e),Ct.subVectors(i,e),Et.subVectors(t,e);const n=Vt.dot(Vt),a=Vt.dot(Ct),o=Vt.dot(Et),h=Ct.dot(Ct),c=Ct.dot(Et),l=n*h-a*a;if(0===l)return r.set(0,0,0),null;const u=1/l,d=(h*o-a*c)*u,m=(n*c-a*o)*u;return r.set(1-d-m,m,d)}static containsPoint(t,e,i,s){return null!==this.getBarycoord(t,e,i,s,kt)&&(kt.x>=0&&kt.y>=0&&kt.x+kt.y<=1)}static getInterpolation(t,e,i,s,r,n,a,o){return null===this.getBarycoord(t,e,i,s,kt)?(o.x=0,o.y=0,"z"in o&&(o.z=0),"w"in o&&(o.w=0),null):(o.setScalar(0),o.addScaledVector(r,kt.x),o.addScaledVector(n,kt.y),o.addScaledVector(a,kt.z),o)}static getInterpolatedAttribute(t,e,i,s,r,n){return Nt.setScalar(0),Xt.setScalar(0),Wt.setScalar(0),Nt.fromBufferAttribute(t,e),Xt.fromBufferAttribute(t,i),Wt.fromBufferAttribute(t,s),n.setScalar(0),n.addScaledVector(Nt,r.x),n.addScaledVector(Xt,r.y),n.addScaledVector(Wt,r.z),n}static isFrontFacing(t,e,i,s){return Vt.subVectors(i,e),Ct.subVectors(t,e),Vt.cross(Ct).dot(s)<0}set(t,e,i){return this.a.copy(t),this.b.copy(e),this.c.copy(i),this}setFromPointsAndIndices(t,e,i,s){return this.a.copy(t[e]),this.b.copy(t[i]),this.c.copy(t[s]),this}setFromAttributeAndIndices(t,e,i,s){return this.a.fromBufferAttribute(t,e),this.b.fromBufferAttribute(t,i),this.c.fromBufferAttribute(t,s),this}clone(){return(new this.constructor).copy(this)}copy(t){return this.a.copy(t.a),this.b.copy(t.b),this.c.copy(t.c),this}getArea(){return Vt.subVectors(this.c,this.b),Ct.subVectors(this.a,this.b),.5*Vt.cross(Ct).length()}getMidpoint(t){return t.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(t){return Gt.getNormal(this.a,this.b,this.c,t)}getPlane(t){return t.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(t,e){return Gt.getBarycoord(t,this.a,this.b,this.c,e)}getInterpolation(t,e,i,s,r){return Gt.getInterpolation(t,this.a,this.b,this.c,e,i,s,r)}containsPoint(t){return Gt.containsPoint(t,this.a,this.b,this.c)}isFrontFacing(t){return Gt.isFrontFacing(this.a,this.b,this.c,t)}intersectsBox(t){return t.intersectsTriangle(this)}closestPointToPoint(t,e){const i=this.a,s=this.b,r=this.c;let n,a;Ut.subVectors(s,i),It.subVectors(r,i),Ot.subVectors(t,i);const o=Ut.dot(Ot),h=It.dot(Ot);if(o<=0&&h<=0)return e.copy(i);Dt.subVectors(t,s);const c=Ut.dot(Dt),l=It.dot(Dt);if(c>=0&&l<=c)return e.copy(s);const u=o*l-c*h;if(u<=0&&o>=0&&c<=0)return n=o/(o-c),e.copy(i).addScaledVector(Ut,n);Rt.subVectors(t,r);const d=Ut.dot(Rt),m=It.dot(Rt);if(m>=0&&d<=m)return e.copy(r);const p=d*h-o*m;if(p<=0&&h>=0&&m<=0)return a=h/(h-m),e.copy(i).addScaledVector(It,a);const y=c*m-d*l;if(y<=0&&l-c>=0&&d-m>=0)return qt.subVectors(r,s),a=(l-c)/(l-c+(d-m)),e.copy(s).addScaledVector(qt,a);const x=1/(y+p+u);return n=p*x,a=u*x,e.copy(i).addScaledVector(Ut,n).addScaledVector(It,a)}equals(t){return t.a.equals(this.a)&&t.b.equals(this.b)&&t.c.equals(this.c)}}const Yt=new d,Lt=new l;let jt=0;class Zt{constructor(t,e,i=!1){if(Array.isArray(t))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.isBufferAttribute=!0,Object.defineProperty(this,"id",{value:jt++}),this.name="",this.array=t,this.itemSize=e,this.count=void 0!==t?t.length/e:0,this.normalized=i,this.usage=35044,this.updateRanges=[],this.gpuType=1015,this.version=0}onUploadCallback(){}set needsUpdate(t){!0===t&&this.version++}setUsage(t){return this.usage=t,this}addUpdateRange(t,e){this.updateRanges.push({start:t,count:e})}clearUpdateRanges(){this.updateRanges.length=0}copy(t){return this.name=t.name,this.array=new t.array.constructor(t.array),this.itemSize=t.itemSize,this.count=t.count,this.normalized=t.normalized,this.usage=t.usage,this.gpuType=t.gpuType,this}copyAt(t,e,i){t*=this.itemSize,i*=e.itemSize;for(let s=0,r=this.itemSize;s<r;s++)this.array[t+s]=e.array[i+s];return this}copyArray(t){return this.array.set(t),this}applyMatrix3(t){if(2===this.itemSize)for(let e=0,i=this.count;e<i;e++)Lt.fromBufferAttribute(this,e),Lt.applyMatrix3(t),this.setXY(e,Lt.x,Lt.y);else if(3===this.itemSize)for(let e=0,i=this.count;e<i;e++)Yt.fromBufferAttribute(this,e),Yt.applyMatrix3(t),this.setXYZ(e,Yt.x,Yt.y,Yt.z);return this}applyMatrix4(t){for(let e=0,i=this.count;e<i;e++)Yt.fromBufferAttribute(this,e),Yt.applyMatrix4(t),this.setXYZ(e,Yt.x,Yt.y,Yt.z);return this}applyNormalMatrix(t){for(let e=0,i=this.count;e<i;e++)Yt.fromBufferAttribute(this,e),Yt.applyNormalMatrix(t),this.setXYZ(e,Yt.x,Yt.y,Yt.z);return this}transformDirection(t){for(let e=0,i=this.count;e<i;e++)Yt.fromBufferAttribute(this,e),Yt.transformDirection(t),this.setXYZ(e,Yt.x,Yt.y,Yt.z);return this}set(t,e=0){return this.array.set(t,e),this}getComponent(t,e){let i=this.array[t*this.itemSize+e];return this.normalized&&(i=h(i,this.array)),i}setComponent(t,e,i){return this.normalized&&(i=c(i,this.array)),this.array[t*this.itemSize+e]=i,this}getX(t){let e=this.array[t*this.itemSize];return this.normalized&&(e=h(e,this.array)),e}setX(t,e){return this.normalized&&(e=c(e,this.array)),this.array[t*this.itemSize]=e,this}getY(t){let e=this.array[t*this.itemSize+1];return this.normalized&&(e=h(e,this.array)),e}setY(t,e){return this.normalized&&(e=c(e,this.array)),this.array[t*this.itemSize+1]=e,this}getZ(t){let e=this.array[t*this.itemSize+2];return this.normalized&&(e=h(e,this.array)),e}setZ(t,e){return this.normalized&&(e=c(e,this.array)),this.array[t*this.itemSize+2]=e,this}getW(t){let e=this.array[t*this.itemSize+3];return this.normalized&&(e=h(e,this.array)),e}setW(t,e){return this.normalized&&(e=c(e,this.array)),this.array[t*this.itemSize+3]=e,this}setXY(t,e,i){return t*=this.itemSize,this.normalized&&(e=c(e,this.array),i=c(i,this.array)),this.array[t+0]=e,this.array[t+1]=i,this}setXYZ(t,e,i,s){return t*=this.itemSize,this.normalized&&(e=c(e,this.array),i=c(i,this.array),s=c(s,this.array)),this.array[t+0]=e,this.array[t+1]=i,this.array[t+2]=s,this}setXYZW(t,e,i,s,r){return t*=this.itemSize,this.normalized&&(e=c(e,this.array),i=c(i,this.array),s=c(s,this.array),r=c(r,this.array)),this.array[t+0]=e,this.array[t+1]=i,this.array[t+2]=s,this.array[t+3]=r,this}onUpload(t){return this.onUploadCallback=t,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){const t={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.from(this.array),normalized:this.normalized};return""!==this.name&&(t.name=this.name),35044!==this.usage&&(t.usage=this.usage),t}}class Jt extends Zt{constructor(t,e,i){super(new Uint16Array(t),e,i)}}class Qt extends Zt{constructor(t,e,i){super(new Uint32Array(t),e,i)}}class Ht extends Zt{constructor(t,e,i){super(new Float32Array(t),e,i)}}let Kt=0;const $t=new st,te=new Ft,ee=new d,ie=new F,se=new F,re=new d;class ne extends r{constructor(){super(),this.isBufferGeometry=!0,Object.defineProperty(this,"id",{value:Kt++}),this.uuid=a(),this.name="",this.type="BufferGeometry",this.index=null,this.indirect=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(t){return Array.isArray(t)?this.index=new(function(t){for(let e=t.length-1;e>=0;--e)if(t[e]>=65535)return!0;return!1}(t)?Qt:Jt)(t,1):this.index=t,this}setIndirect(t){return this.indirect=t,this}getIndirect(){return this.indirect}getAttribute(t){return this.attributes[t]}setAttribute(t,e){return this.attributes[t]=e,this}deleteAttribute(t){return delete this.attributes[t],this}hasAttribute(t){return void 0!==this.attributes[t]}addGroup(t,e,i=0){this.groups.push({start:t,count:e,materialIndex:i})}clearGroups(){this.groups=[]}setDrawRange(t,e){this.drawRange.start=t,this.drawRange.count=e}applyMatrix4(t){const e=this.attributes.position;void 0!==e&&(e.applyMatrix4(t),e.needsUpdate=!0);const i=this.attributes.normal;if(void 0!==i){const e=(new y).getNormalMatrix(t);i.applyNormalMatrix(e),i.needsUpdate=!0}const s=this.attributes.tangent;return void 0!==s&&(s.transformDirection(t),s.needsUpdate=!0),null!==this.boundingBox&&this.computeBoundingBox(),null!==this.boundingSphere&&this.computeBoundingSphere(),this}applyQuaternion(t){return $t.makeRotationFromQuaternion(t),this.applyMatrix4($t),this}rotateX(t){return $t.makeRotationX(t),this.applyMatrix4($t),this}rotateY(t){return $t.makeRotationY(t),this.applyMatrix4($t),this}rotateZ(t){return $t.makeRotationZ(t),this.applyMatrix4($t),this}translate(t,e,i){return $t.makeTranslation(t,e,i),this.applyMatrix4($t),this}scale(t,e,i){return $t.makeScale(t,e,i),this.applyMatrix4($t),this}lookAt(t){return te.lookAt(t),te.updateMatrix(),this.applyMatrix4(te.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(ee).negate(),this.translate(ee.x,ee.y,ee.z),this}setFromPoints(t){const e=this.getAttribute("position");if(void 0===e){const e=[];for(let i=0,s=t.length;i<s;i++){const s=t[i];e.push(s.x,s.y,s.z||0)}this.setAttribute("position",new Ht(e,3))}else{const i=Math.min(t.length,e.count);for(let s=0;s<i;s++){const i=t[s];e.setXYZ(s,i.x,i.y,i.z||0)}t.length,e.count,e.needsUpdate=!0}return this}computeBoundingBox(){null===this.boundingBox&&(this.boundingBox=new F);const t=this.attributes.position,e=this.morphAttributes.position;if(t&&t.isGLBufferAttribute)this.boundingBox.set(new d(-1/0,-1/0,-1/0),new d(1/0,1/0,1/0));else{if(void 0!==t){if(this.boundingBox.setFromBufferAttribute(t),e)for(let t=0,i=e.length;t<i;t++){const i=e[t];ie.setFromBufferAttribute(i),this.morphTargetsRelative?(re.addVectors(this.boundingBox.min,ie.min),this.boundingBox.expandByPoint(re),re.addVectors(this.boundingBox.max,ie.max),this.boundingBox.expandByPoint(re)):(this.boundingBox.expandByPoint(ie.min),this.boundingBox.expandByPoint(ie.max))}}else this.boundingBox.makeEmpty();isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z)}}computeBoundingSphere(){null===this.boundingSphere&&(this.boundingSphere=new Z);const t=this.attributes.position,e=this.morphAttributes.position;if(t&&t.isGLBufferAttribute)this.boundingSphere.set(new d,1/0);else if(t){const i=this.boundingSphere.center;if(ie.setFromBufferAttribute(t),e)for(let t=0,i=e.length;t<i;t++){const i=e[t];se.setFromBufferAttribute(i),this.morphTargetsRelative?(re.addVectors(ie.min,se.min),ie.expandByPoint(re),re.addVectors(ie.max,se.max),ie.expandByPoint(re)):(ie.expandByPoint(se.min),ie.expandByPoint(se.max))}ie.getCenter(i);let s=0;for(let e=0,r=t.count;e<r;e++)re.fromBufferAttribute(t,e),s=Math.max(s,i.distanceToSquared(re));if(e)for(let r=0,n=e.length;r<n;r++){const n=e[r],a=this.morphTargetsRelative;for(let e=0,r=n.count;e<r;e++)re.fromBufferAttribute(n,e),a&&(ee.fromBufferAttribute(t,e),re.add(ee)),s=Math.max(s,i.distanceToSquared(re))}this.boundingSphere.radius=Math.sqrt(s),isNaN(this.boundingSphere.radius)}}computeTangents(){const t=this.index,e=this.attributes;if(null===t||void 0===e.position||void 0===e.normal||void 0===e.uv)return;const i=e.position,s=e.normal,r=e.uv;!1===this.hasAttribute("tangent")&&this.setAttribute("tangent",new Zt(new Float32Array(4*i.count),4));const n=this.getAttribute("tangent"),a=[],o=[];for(let t=0;t<i.count;t++)a[t]=new d,o[t]=new d;const h=new d,c=new d,u=new d,m=new l,p=new l,y=new l,x=new d,f=new d;function g(t,e,s){h.fromBufferAttribute(i,t),c.fromBufferAttribute(i,e),u.fromBufferAttribute(i,s),m.fromBufferAttribute(r,t),p.fromBufferAttribute(r,e),y.fromBufferAttribute(r,s),c.sub(h),u.sub(h),p.sub(m),y.sub(m);const n=1/(p.x*y.y-y.x*p.y);isFinite(n)&&(x.copy(c).multiplyScalar(y.y).addScaledVector(u,-p.y).multiplyScalar(n),f.copy(u).multiplyScalar(p.x).addScaledVector(c,-y.x).multiplyScalar(n),a[t].add(x),a[e].add(x),a[s].add(x),o[t].add(f),o[e].add(f),o[s].add(f))}let w=this.groups;0===w.length&&(w=[{start:0,count:t.count}]);for(let e=0,i=w.length;e<i;++e){const i=w[e],s=i.start;for(let e=s,r=s+i.count;e<r;e+=3)g(t.getX(e+0),t.getX(e+1),t.getX(e+2))}const b=new d,M=new d,z=new d,v=new d;function _(t){z.fromBufferAttribute(s,t),v.copy(z);const e=a[t];b.copy(e),b.sub(z.multiplyScalar(z.dot(e))).normalize(),M.crossVectors(v,e);const i=M.dot(o[t])<0?-1:1;n.setXYZW(t,b.x,b.y,b.z,i)}for(let e=0,i=w.length;e<i;++e){const i=w[e],s=i.start;for(let e=s,r=s+i.count;e<r;e+=3)_(t.getX(e+0)),_(t.getX(e+1)),_(t.getX(e+2))}}computeVertexNormals(){const t=this.index,e=this.getAttribute("position");if(void 0!==e){let i=this.getAttribute("normal");if(void 0===i)i=new Zt(new Float32Array(3*e.count),3),this.setAttribute("normal",i);else for(let t=0,e=i.count;t<e;t++)i.setXYZ(t,0,0,0);const s=new d,r=new d,n=new d,a=new d,o=new d,h=new d,c=new d,l=new d;if(t)for(let u=0,d=t.count;u<d;u+=3){const d=t.getX(u+0),m=t.getX(u+1),p=t.getX(u+2);s.fromBufferAttribute(e,d),r.fromBufferAttribute(e,m),n.fromBufferAttribute(e,p),c.subVectors(n,r),l.subVectors(s,r),c.cross(l),a.fromBufferAttribute(i,d),o.fromBufferAttribute(i,m),h.fromBufferAttribute(i,p),a.add(c),o.add(c),h.add(c),i.setXYZ(d,a.x,a.y,a.z),i.setXYZ(m,o.x,o.y,o.z),i.setXYZ(p,h.x,h.y,h.z)}else for(let t=0,a=e.count;t<a;t+=3)s.fromBufferAttribute(e,t+0),r.fromBufferAttribute(e,t+1),n.fromBufferAttribute(e,t+2),c.subVectors(n,r),l.subVectors(s,r),c.cross(l),i.setXYZ(t+0,c.x,c.y,c.z),i.setXYZ(t+1,c.x,c.y,c.z),i.setXYZ(t+2,c.x,c.y,c.z);this.normalizeNormals(),i.needsUpdate=!0}}normalizeNormals(){const t=this.attributes.normal;for(let e=0,i=t.count;e<i;e++)re.fromBufferAttribute(t,e),re.normalize(),t.setXYZ(e,re.x,re.y,re.z)}toNonIndexed(){function t(t,e){const i=t.array,s=t.itemSize,r=t.normalized,n=new i.constructor(e.length*s);let a=0,o=0;for(let r=0,h=e.length;r<h;r++){a=t.isInterleavedBufferAttribute?e[r]*t.data.stride+t.offset:e[r]*s;for(let t=0;t<s;t++)n[o++]=i[a++]}return new Zt(n,s,r)}if(null===this.index)return this;const e=new ne,i=this.index.array,s=this.attributes;for(const r in s){const n=t(s[r],i);e.setAttribute(r,n)}const r=this.morphAttributes;for(const s in r){const n=[],a=r[s];for(let e=0,s=a.length;e<s;e++){const s=t(a[e],i);n.push(s)}e.morphAttributes[s]=n}e.morphTargetsRelative=this.morphTargetsRelative;const n=this.groups;for(let t=0,i=n.length;t<i;t++){const i=n[t];e.addGroup(i.start,i.count,i.materialIndex)}return e}toJSON(){const t={metadata:{version:4.7,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(t.uuid=this.uuid,t.type=this.type,""!==this.name&&(t.name=this.name),Object.keys(this.userData).length>0&&(t.userData=this.userData),void 0!==this.parameters){const e=this.parameters;for(const i in e)void 0!==e[i]&&(t[i]=e[i]);return t}t.data={attributes:{}};const e=this.index;null!==e&&(t.data.index={type:e.array.constructor.name,array:Array.prototype.slice.call(e.array)});const i=this.attributes;for(const e in i){const s=i[e];t.data.attributes[e]=s.toJSON(t.data)}const s={};let r=!1;for(const e in this.morphAttributes){const i=this.morphAttributes[e],n=[];for(let e=0,s=i.length;e<s;e++){const s=i[e];n.push(s.toJSON(t.data))}n.length>0&&(s[e]=n,r=!0)}r&&(t.data.morphAttributes=s,t.data.morphTargetsRelative=this.morphTargetsRelative);const n=this.groups;n.length>0&&(t.data.groups=JSON.parse(JSON.stringify(n)));const a=this.boundingSphere;return null!==a&&(t.data.boundingSphere=a.toJSON()),t}clone(){return(new this.constructor).copy(this)}copy(t){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const e={};this.name=t.name;const i=t.index;null!==i&&this.setIndex(i.clone());const s=t.attributes;for(const t in s){const i=s[t];this.setAttribute(t,i.clone(e))}const r=t.morphAttributes;for(const t in r){const i=[],s=r[t];for(let t=0,r=s.length;t<r;t++)i.push(s[t].clone(e));this.morphAttributes[t]=i}this.morphTargetsRelative=t.morphTargetsRelative;const n=t.groups;for(let t=0,e=n.length;t<e;t++){const e=n[t];this.addGroup(e.start,e.count,e.materialIndex)}const a=t.boundingBox;null!==a&&(this.boundingBox=a.clone());const o=t.boundingSphere;return null!==o&&(this.boundingSphere=o.clone()),this.drawRange.start=t.drawRange.start,this.drawRange.count=t.drawRange.count,this.userData=t.userData,this}dispose(){this.dispatchEvent({type:"dispose"})}}const ae=new d,oe=new d,he=new y;class ce{constructor(t=new d(1,0,0),e=0){this.isPlane=!0,this.normal=t,this.constant=e}set(t,e){return this.normal.copy(t),this.constant=e,this}setComponents(t,e,i,s){return this.normal.set(t,e,i),this.constant=s,this}setFromNormalAndCoplanarPoint(t,e){return this.normal.copy(t),this.constant=-e.dot(this.normal),this}setFromCoplanarPoints(t,e,i){const s=ae.subVectors(i,e).cross(oe.subVectors(t,e)).normalize();return this.setFromNormalAndCoplanarPoint(s,t),this}copy(t){return this.normal.copy(t.normal),this.constant=t.constant,this}normalize(){const t=1/this.normal.length();return this.normal.multiplyScalar(t),this.constant*=t,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(t){return this.normal.dot(t)+this.constant}distanceToSphere(t){return this.distanceToPoint(t.center)-t.radius}projectPoint(t,e){return e.copy(t).addScaledVector(this.normal,-this.distanceToPoint(t))}intersectLine(t,e){const i=t.delta(ae),s=this.normal.dot(i);if(0===s)return 0===this.distanceToPoint(t.start)?e.copy(t.start):null;const r=-(t.start.dot(this.normal)+this.constant)/s;return r<0||r>1?null:e.copy(t.start).addScaledVector(i,r)}intersectsLine(t){const e=this.distanceToPoint(t.start),i=this.distanceToPoint(t.end);return e<0&&i>0||i<0&&e>0}intersectsBox(t){return t.intersectsPlane(this)}intersectsSphere(t){return t.intersectsPlane(this)}coplanarPoint(t){return t.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(t,e){const i=e||he.getNormalMatrix(t),s=this.coplanarPoint(ae).applyMatrix4(t),r=this.normal.applyMatrix3(i).normalize();return this.constant=-s.dot(r),this}translate(t){return this.constant-=t.dot(this.normal),this}equals(t){return t.normal.equals(this.normal)&&t.constant===this.constant}clone(){return(new this.constructor).copy(this)}}const le=new d,ue=new d;class de{constructor(t=new d,e=new d){this.start=t,this.end=e}set(t,e){return this.start.copy(t),this.end.copy(e),this}copy(t){return this.start.copy(t.start),this.end.copy(t.end),this}getCenter(t){return t.addVectors(this.start,this.end).multiplyScalar(.5)}delta(t){return t.subVectors(this.end,this.start)}distanceSq(){return this.start.distanceToSquared(this.end)}distance(){return this.start.distanceTo(this.end)}at(t,e){return this.delta(e).multiplyScalar(t).add(this.start)}closestPointToPointParameter(t,e){le.subVectors(t,this.start),ue.subVectors(this.end,this.start);const i=ue.dot(ue);let s=ue.dot(le)/i;return e&&(s=o(s,0,1)),s}closestPointToPoint(t,e,i){const s=this.closestPointToPointParameter(t,e);return this.delta(i).multiplyScalar(s).add(this.start)}applyMatrix4(t){return this.start.applyMatrix4(t),this.end.applyMatrix4(t),this}equals(t){return t.start.equals(this.start)&&t.end.equals(this.end)}clone(){return(new this.constructor).copy(this)}}"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:t}})),"undefined"!=typeof window&&(window.__THREE__||(window.__THREE__=t))
/**
	 * @license
	 * Copyright 2010-2025 Three.js Authors
	 * SPDX-License-Identifier: MIT
	 */;(class extends P{constructor(t,e,i,s={}){super(t,e,s),this.depthBuffer=!1,this.stencilBuffer=!1,this.numViews=i}copy(t){return super.copy(t),this.numViews=t.numViews,this}}).prototype.isWebGLMultiviewRenderTarget=!0;const me=1.25,pe=65535,ye=Math.pow(2,-24),xe=Symbol("SKIP_GENERATION");function fe(t){return function(t){return t.index?t.index.count:t.attributes.position.count}(t)/3}function ge(t,e){if(!t.index){const i=t.attributes.position.count,s=function(t,e=ArrayBuffer){return t>65535?new Uint32Array(new e(4*t)):new Uint16Array(new e(2*t))}(i,e.useSharedArrayBuffer?SharedArrayBuffer:ArrayBuffer);t.setIndex(new Zt(s,1));for(let t=0;t<i;t++)s[t]=t}}function we(t,e){const i=fe(t),s=e||t.drawRange,r=s.start/3,n=(s.start+s.count)/3,a=Math.max(0,r),o=Math.min(i,n)-a;return[{offset:Math.floor(a),count:Math.floor(o)}]}function be(t,e){if(!t.groups||!t.groups.length)return we(t,e);const i=[],s=new Set,r=e||t.drawRange,n=r.start/3,a=(r.start+r.count)/3;for(const e of t.groups){const t=e.start/3,i=(e.start+e.count)/3;s.add(Math.max(n,t)),s.add(Math.min(a,i))}const o=Array.from(s.values()).sort((t,e)=>t-e);for(let t=0;t<o.length-1;t++){const e=o[t],s=o[t+1];i.push({offset:Math.floor(e),count:Math.floor(s-e)})}return i}function Me(t,e,i,s,r){let n=1/0,a=1/0,o=1/0,h=-1/0,c=-1/0,l=-1/0,u=1/0,d=1/0,m=1/0,p=-1/0,y=-1/0,x=-1/0;for(let s=6*e,r=6*(e+i);s<r;s+=6){const e=t[s+0],i=t[s+1],r=e-i,f=e+i;r<n&&(n=r),f>h&&(h=f),e<u&&(u=e),e>p&&(p=e);const g=t[s+2],w=t[s+3],b=g-w,M=g+w;b<a&&(a=b),M>c&&(c=M),g<d&&(d=g),g>y&&(y=g);const z=t[s+4],v=t[s+5],_=z-v,A=z+v;_<o&&(o=_),A>l&&(l=A),z<m&&(m=z),z>x&&(x=z)}s[0]=n,s[1]=a,s[2]=o,s[3]=h,s[4]=c,s[5]=l,r[0]=u,r[1]=d,r[2]=m,r[3]=p,r[4]=y,r[5]=x}function ze(t,e,i){return i.min.x=e[t],i.min.y=e[t+1],i.min.z=e[t+2],i.max.x=e[t+3],i.max.y=e[t+4],i.max.z=e[t+5],i}function ve(t){let e=-1,i=-1/0;for(let s=0;s<3;s++){const r=t[s+3]-t[s];r>i&&(i=r,e=s)}return e}function _e(t,e){e.set(t)}function Ae(t,e,i){let s,r;for(let n=0;n<3;n++){const a=n+3;s=t[n],r=e[n],i[n]=s<r?s:r,s=t[a],r=e[a],i[a]=s>r?s:r}}function Se(t,e,i){for(let s=0;s<3;s++){const r=e[t+2*s],n=e[t+2*s+1],a=r-n,o=r+n;a<i[s]&&(i[s]=a),o>i[s+3]&&(i[s+3]=o)}}function Be(t){const e=t[3]-t[0],i=t[4]-t[1],s=t[5]-t[2];return 2*(e*i+i*s+s*e)}const Te=32,Pe=(t,e)=>t.candidate-e.candidate,Fe=new Array(Te).fill().map(()=>({count:0,bounds:new Float32Array(6),rightCacheBounds:new Float32Array(6),leftCacheBounds:new Float32Array(6),candidate:0})),Ve=new Float32Array(6);class Ce{constructor(){this.boundingData=new Float32Array(6)}}function Ee(t,e,i,s,r,n){let a=s,o=s+r-1;const h=n.pos,c=2*n.axis;for(;;){for(;a<=o&&i[6*a+c]<h;)a++;for(;a<=o&&i[6*o+c]>=h;)o--;if(!(a<o))return a;for(let t=0;t<3;t++){let i=e[3*a+t];e[3*a+t]=e[3*o+t],e[3*o+t]=i}for(let t=0;t<6;t++){let e=i[6*a+t];i[6*a+t]=i[6*o+t],i[6*o+t]=e}a++,o--}}function ke(t,e,i,s,r,n){let a=s,o=s+r-1;const h=n.pos,c=2*n.axis;for(;;){for(;a<=o&&i[6*a+c]<h;)a++;for(;a<=o&&i[6*o+c]>=h;)o--;if(!(a<o))return a;{let e=t[a];t[a]=t[o],t[o]=e;for(let t=0;t<6;t++){let e=i[6*a+t];i[6*a+t]=i[6*o+t],i[6*o+t]=e}a++,o--}}}function Ue(t,e){return 65535===e[t+15]}function Ie(t,e){return e[t+6]}function qe(t,e){return e[t+14]}function Oe(t){return t+8}function De(t,e){return e[t+6]}function Re(t,e){return e[t+7]}function Ne(t){return t}let Xe,We,Ge,Ye;const Le=Math.pow(2,32);function je(t){return"count"in t?1:1+je(t.left)+je(t.right)}function Ze(t,e,i){return Xe=new Float32Array(i),We=new Uint32Array(i),Ge=new Uint16Array(i),Ye=new Uint8Array(i),Je(t,e)}function Je(t,e){const i=t/4,s=t/2,r="count"in e,n=e.boundingData;for(let t=0;t<6;t++)Xe[i+t]=n[t];if(r){if(e.buffer){const s=e.buffer;Ye.set(new Uint8Array(s),t);for(let e=t,r=t+s.byteLength;e<r;e+=32){Ue(e/2,Ge)||(We[e/4+6]+=i)}return t+s.byteLength}{const r=e.offset,n=e.count;return We[i+6]=r,Ge[s+14]=n,Ge[s+15]=pe,t+32}}{const s=e.left,r=e.right,n=e.splitAxis;let a;if(a=Je(t+32,s),a/4>Le)throw new Error("MeshBVH: Cannot store child pointer greater than 32 bits.");return We[i+6]=a/4,a=Je(a,r),We[i+7]=n,a}}function Qe(t,e,i,s,r){const{maxDepth:n,verbose:a,maxLeafTris:o,strategy:h,onProgress:c,indirect:l}=r,u=t._indirectBuffer,d=t.geometry,m=d.index?d.index.array:null,p=l?ke:Ee,y=fe(d),x=new Float32Array(6);let f=!1;const g=new Ce;return Me(e,i,s,g.boundingData,x),function t(i,s,r,a=null,c=0){!f&&c>=n&&(f=!0);if(r<=o||c>=n)return w(s+r),i.offset=s,i.count=r,i;const l=function(t,e,i,s,r,n){let a=-1,o=0;if(0===n)a=ve(e),-1!==a&&(o=(e[a]+e[a+3])/2);else if(1===n)a=ve(t),-1!==a&&(o=function(t,e,i,s){let r=0;for(let n=e,a=e+i;n<a;n++)r+=t[6*n+2*s];return r/i}(i,s,r,a));else if(2===n){const n=Be(t);let h=me*r;const c=6*s,l=6*(s+r);for(let t=0;t<3;t++){const s=e[t],u=(e[t+3]-s)/Te;if(r<8){const e=[...Fe];e.length=r;let s=0;for(let r=c;r<l;r+=6,s++){const n=e[s];n.candidate=i[r+2*t],n.count=0;const{bounds:a,leftCacheBounds:o,rightCacheBounds:h}=n;for(let t=0;t<3;t++)h[t]=1/0,h[t+3]=-1/0,o[t]=1/0,o[t+3]=-1/0,a[t]=1/0,a[t+3]=-1/0;Se(r,i,a)}e.sort(Pe);let u=r;for(let t=0;t<u;t++){const i=e[t];for(;t+1<u&&e[t+1].candidate===i.candidate;)e.splice(t+1,1),u--}for(let s=c;s<l;s+=6){const r=i[s+2*t];for(let t=0;t<u;t++){const n=e[t];r>=n.candidate?Se(s,i,n.rightCacheBounds):(Se(s,i,n.leftCacheBounds),n.count++)}}for(let i=0;i<u;i++){const s=e[i],c=s.count,l=r-s.count,u=s.leftCacheBounds,d=s.rightCacheBounds;let m=0;0!==c&&(m=Be(u)/n);let p=0;0!==l&&(p=Be(d)/n);const y=1+me*(m*c+p*l);y<h&&(a=t,h=y,o=s.candidate)}}else{for(let t=0;t<Te;t++){const e=Fe[t];e.count=0,e.candidate=s+u+t*u;const i=e.bounds;for(let t=0;t<3;t++)i[t]=1/0,i[t+3]=-1/0}for(let e=c;e<l;e+=6){let r=~~((i[e+2*t]-s)/u);r>=Te&&(r=31);const n=Fe[r];n.count++,Se(e,i,n.bounds)}const e=Fe[31];_e(e.bounds,e.rightCacheBounds);for(let t=30;t>=0;t--){const e=Fe[t],i=Fe[t+1];Ae(e.bounds,i.rightCacheBounds,e.rightCacheBounds)}let d=0;for(let e=0;e<31;e++){const i=Fe[e],s=i.count,c=i.bounds,l=Fe[e+1].rightCacheBounds;0!==s&&(0===d?_e(c,Ve):Ae(c,Ve,Ve)),d+=s;let u=0,m=0;0!==d&&(u=Be(Ve)/n);const p=r-d;0!==p&&(m=Be(l)/n);const y=1+me*(u*d+m*p);y<h&&(a=t,h=y,o=i.candidate)}}}}return{axis:a,pos:o}}(i.boundingData,a,e,s,r,h);if(-1===l.axis)return w(s+r),i.offset=s,i.count=r,i;const d=p(u,m,e,s,r,l);if(d===s||d===s+r)w(s+r),i.offset=s,i.count=r;else{i.splitAxis=l.axis;const n=new Ce,a=s,o=d-s;i.left=n,Me(e,a,o,n.boundingData,x),t(n,a,o,x,c+1);const h=new Ce,u=d,m=r-o;i.right=h,Me(e,u,m,h.boundingData,x),t(h,u,m,x,c+1)}return i}(g,i,s,x),g;function w(t){c&&c(t/y)}}function He(t,e){const i=t.geometry;e.indirect&&(t._indirectBuffer=function(t,e){const i=(t.index?t.index.count:t.attributes.position.count)/3,s=i>65536,r=s?4:2,n=e?new SharedArrayBuffer(i*r):new ArrayBuffer(i*r),a=s?new Uint32Array(n):new Uint16Array(n);for(let t=0,e=a.length;t<e;t++)a[t]=t;return a}(i,e.useSharedArrayBuffer),function(t,e){const i=fe(t),s=be(t,e).sort((t,e)=>t.offset-e.offset),r=s[s.length-1];r.count=Math.min(i-r.offset,r.count);let n=0;return s.forEach(({count:t})=>n+=t),i!==n}(i,e.range)&&e.verbose),t._indirectBuffer||ge(i,e);const s=e.useSharedArrayBuffer?SharedArrayBuffer:ArrayBuffer,r=function(t,e=null,i=null,s=null){const r=t.attributes.position,n=t.index?t.index.array:null,a=fe(t),o=r.normalized;let h;null===e?(h=new Float32Array(6*a),i=0,s=a):(h=e,i=i||0,s=s||a);const c=r.array,l=r.offset||0;let u=3;r.isInterleavedBufferAttribute&&(u=r.data.stride);const d=["getX","getY","getZ"];for(let t=i;t<i+s;t++){const e=3*t,i=6*t;let s=e+0,a=e+1,m=e+2;n&&(s=n[s],a=n[a],m=n[m]),o||(s=s*u+l,a=a*u+l,m=m*u+l);for(let t=0;t<3;t++){let e,n,l;o?(e=r[d[t]](s),n=r[d[t]](a),l=r[d[t]](m)):(e=c[s+t],n=c[a+t],l=c[m+t]);let u=e;n<u&&(u=n),l<u&&(u=l);let p=e;n>p&&(p=n),l>p&&(p=l);const y=(p-u)/2,x=2*t;h[i+x+0]=u+y,h[i+x+1]=y+(Math.abs(u)+y)*ye}}return h}(i),n=e.indirect?we(i,e.range):be(i,e.range);t._roots=n.map(i=>{const n=Qe(t,r,i.offset,i.count,e),a=je(n),o=new s(32*a);return Ze(0,n,o),o})}class Ke{constructor(){this.min=1/0,this.max=-1/0}setFromPointsField(t,e){let i=1/0,s=-1/0;for(let r=0,n=t.length;r<n;r++){const n=t[r][e];i=n<i?n:i,s=n>s?n:s}this.min=i,this.max=s}setFromPoints(t,e){let i=1/0,s=-1/0;for(let r=0,n=e.length;r<n;r++){const n=e[r],a=t.dot(n);i=a<i?a:i,s=a>s?a:s}this.min=i,this.max=s}isSeparated(t){return this.min>t.max||t.min>this.max}}Ke.prototype.setFromBox=function(){const t=new d;return function(e,i){const s=i.min,r=i.max;let n=1/0,a=-1/0;for(let i=0;i<=1;i++)for(let o=0;o<=1;o++)for(let h=0;h<=1;h++){t.x=s.x*i+r.x*(1-i),t.y=s.y*o+r.y*(1-o),t.z=s.z*h+r.z*(1-h);const c=e.dot(t);n=Math.min(c,n),a=Math.max(c,a)}this.min=n,this.max=a}}();const $e=function(){const t=new d,e=new d,i=new d;return function(s,r,n){const a=s.start,o=t,h=r.start,c=e;i.subVectors(a,h),t.subVectors(s.end,s.start),e.subVectors(r.end,r.start);const l=i.dot(c),u=c.dot(o),d=c.dot(c),m=i.dot(o),p=o.dot(o)*d-u*u;let y,x;y=0!==p?(l*u-m*d)/p:0,x=(l+y*u)/d,n.x=y,n.y=x}}(),ti=function(){const t=new l,e=new d,i=new d;return function(s,r,n,a){$e(s,r,t);let o=t.x,h=t.y;if(o>=0&&o<=1&&h>=0&&h<=1)return s.at(o,n),void r.at(h,a);if(o>=0&&o<=1)return h<0?r.at(0,a):r.at(1,a),void s.closestPointToPoint(a,!0,n);if(h>=0&&h<=1)return o<0?s.at(0,n):s.at(1,n),void r.closestPointToPoint(n,!0,a);{let t,c;t=o<0?s.start:s.end,c=h<0?r.start:r.end;const l=e,u=i;return s.closestPointToPoint(c,!0,e),r.closestPointToPoint(t,!0,i),l.distanceToSquared(c)<=u.distanceToSquared(t)?(n.copy(l),void a.copy(c)):(n.copy(t),void a.copy(u))}}}(),ei=function(){const t=new d,e=new d,i=new ce,s=new de;return function(r,n){const{radius:a,center:o}=r,{a:h,b:c,c:l}=n;s.start=h,s.end=c;if(s.closestPointToPoint(o,!0,t).distanceTo(o)<=a)return!0;s.start=h,s.end=l;if(s.closestPointToPoint(o,!0,t).distanceTo(o)<=a)return!0;s.start=c,s.end=l;if(s.closestPointToPoint(o,!0,t).distanceTo(o)<=a)return!0;const u=n.getPlane(i);if(Math.abs(u.distanceToPoint(o))<=a){const t=u.projectPoint(o,e);if(n.containsPoint(t))return!0}return!1}}();function ii(t){return Math.abs(t)<1e-15}class si extends Gt{constructor(...t){super(...t),this.isExtendedTriangle=!0,this.satAxes=new Array(4).fill().map(()=>new d),this.satBounds=new Array(4).fill().map(()=>new Ke),this.points=[this.a,this.b,this.c],this.sphere=new Z,this.plane=new ce,this.needsUpdate=!0}intersectsSphere(t){return ei(t,this)}update(){const t=this.a,e=this.b,i=this.c,s=this.points,r=this.satAxes,n=this.satBounds,a=r[0],o=n[0];this.getNormal(a),o.setFromPoints(a,s);const h=r[1],c=n[1];h.subVectors(t,e),c.setFromPoints(h,s);const l=r[2],u=n[2];l.subVectors(e,i),u.setFromPoints(l,s);const d=r[3],m=n[3];d.subVectors(i,t),m.setFromPoints(d,s),this.sphere.setFromPoints(this.points),this.plane.setFromNormalAndCoplanarPoint(a,t),this.needsUpdate=!1}}si.prototype.closestPointToSegment=function(){const t=new d,e=new d,i=new de;return function(s,r=null,n=null){const{start:a,end:o}=s,h=this.points;let c,l=1/0;for(let a=0;a<3;a++){const o=(a+1)%3;i.start.copy(h[a]),i.end.copy(h[o]),ti(i,s,t,e),c=t.distanceToSquared(e),c<l&&(l=c,r&&r.copy(t),n&&n.copy(e))}return this.closestPointToPoint(a,t),c=a.distanceToSquared(t),c<l&&(l=c,r&&r.copy(t),n&&n.copy(a)),this.closestPointToPoint(o,t),c=o.distanceToSquared(t),c<l&&(l=c,r&&r.copy(t),n&&n.copy(o)),Math.sqrt(l)}}(),si.prototype.intersectsTriangle=function(){const t=new si,e=new Array(3),i=new Array(3),s=new Ke,r=new Ke,n=new d,a=new d,o=new d,h=new d,c=new d,l=new de,u=new de,m=new de,p=new d;function y(t,e,i){const s=t.points;let r=0,n=-1;for(let t=0;t<3;t++){const{start:o,end:h}=l;o.copy(s[t]),h.copy(s[(t+1)%3]),l.delta(a);const c=ii(e.distanceToPoint(o));if(ii(e.normal.dot(a))&&c){i.copy(l),r=2;break}const u=e.intersectLine(l,p);if(!u&&c&&p.copy(o),(u||c)&&!ii(p.distanceTo(h))){if(r<=1){(1===r?i.start:i.end).copy(p),c&&(n=r)}else if(r>=2){(1===n?i.start:i.end).copy(p),r=2;break}if(r++,2===r&&-1===n)break}}return r}return function(a,l=null,d=!1){this.needsUpdate&&this.update(),a.isExtendedTriangle?a.needsUpdate&&a.update():(t.copy(a),t.update(),a=t);const p=this.plane,x=a.plane;if(Math.abs(p.normal.dot(x.normal))>1-1e-10){const t=this.satBounds,o=this.satAxes;i[0]=a.a,i[1]=a.b,i[2]=a.c;for(let e=0;e<4;e++){const r=t[e],n=o[e];if(s.setFromPoints(n,i),r.isSeparated(s))return!1}const h=a.satBounds,c=a.satAxes;e[0]=this.a,e[1]=this.b,e[2]=this.c;for(let t=0;t<4;t++){const i=h[t],r=c[t];if(s.setFromPoints(r,e),i.isSeparated(s))return!1}for(let t=0;t<4;t++){const a=o[t];for(let t=0;t<4;t++){const o=c[t];if(n.crossVectors(a,o),s.setFromPoints(n,e),r.setFromPoints(n,i),s.isSeparated(r))return!1}}return l&&(l.start.set(0,0,0),l.end.set(0,0,0)),!0}{const t=y(this,x,u);if(1===t&&a.containsPoint(u.end))return l&&(l.start.copy(u.end),l.end.copy(u.end)),!0;if(2!==t)return!1;const e=y(a,p,m);if(1===e&&this.containsPoint(m.end))return l&&(l.start.copy(m.end),l.end.copy(m.end)),!0;if(2!==e)return!1;if(u.delta(o),m.delta(h),o.dot(h)<0){let t=m.start;m.start=m.end,m.end=t}const i=u.start.dot(o),s=u.end.dot(o),r=m.start.dot(o),n=m.end.dot(o);return(i===n||r===s||s<r!==i<n)&&(l&&(c.subVectors(u.start,m.start),c.dot(o)>0?l.start.copy(u.start):l.start.copy(m.start),c.subVectors(u.end,m.end),c.dot(o)<0?l.end.copy(u.end):l.end.copy(m.end)),!0)}}}(),si.prototype.distanceToPoint=function(){const t=new d;return function(e){return this.closestPointToPoint(e,t),e.distanceTo(t)}}(),si.prototype.distanceToTriangle=function(){const t=new d,e=new d,i=["a","b","c"],s=new de,r=new de;return function(n,a=null,o=null){const h=a||o?s:null;if(this.intersectsTriangle(n,h))return(a||o)&&(a&&h.getCenter(a),o&&h.getCenter(o)),0;let c=1/0;for(let e=0;e<3;e++){let s;const r=i[e],h=n[r];this.closestPointToPoint(h,t),s=h.distanceToSquared(t),s<c&&(c=s,a&&a.copy(t),o&&o.copy(h));const l=this[r];n.closestPointToPoint(l,t),s=l.distanceToSquared(t),s<c&&(c=s,a&&a.copy(l),o&&o.copy(t))}for(let h=0;h<3;h++){const l=i[h],u=i[(h+1)%3];s.set(this[l],this[u]);for(let h=0;h<3;h++){const l=i[h],u=i[(h+1)%3];r.set(n[l],n[u]),ti(s,r,t,e);const d=t.distanceToSquared(e);d<c&&(c=d,a&&a.copy(t),o&&o.copy(e))}}return Math.sqrt(c)}}();class ri{constructor(t,e,i){this.isOrientedBox=!0,this.min=new d,this.max=new d,this.matrix=new st,this.invMatrix=new st,this.points=new Array(8).fill().map(()=>new d),this.satAxes=new Array(3).fill().map(()=>new d),this.satBounds=new Array(3).fill().map(()=>new Ke),this.alignedSatBounds=new Array(3).fill().map(()=>new Ke),this.needsUpdate=!1,t&&this.min.copy(t),e&&this.max.copy(e),i&&this.matrix.copy(i)}set(t,e,i){this.min.copy(t),this.max.copy(e),this.matrix.copy(i),this.needsUpdate=!0}copy(t){this.min.copy(t.min),this.max.copy(t.max),this.matrix.copy(t.matrix),this.needsUpdate=!0}}ri.prototype.update=function(){const t=this.matrix,e=this.min,i=this.max,s=this.points;for(let r=0;r<=1;r++)for(let n=0;n<=1;n++)for(let a=0;a<=1;a++){const o=s[1*r|2*n|4*a];o.x=r?i.x:e.x,o.y=n?i.y:e.y,o.z=a?i.z:e.z,o.applyMatrix4(t)}const r=this.satBounds,n=this.satAxes,a=s[0];for(let t=0;t<3;t++){const e=n[t],i=r[t],o=s[1<<t];e.subVectors(a,o),i.setFromPoints(e,s)}const o=this.alignedSatBounds;o[0].setFromPointsField(s,"x"),o[1].setFromPointsField(s,"y"),o[2].setFromPointsField(s,"z"),this.invMatrix.copy(this.matrix).invert(),this.needsUpdate=!1},ri.prototype.intersectsBox=function(){const t=new Ke;return function(e){this.needsUpdate&&this.update();const i=e.min,s=e.max,r=this.satBounds,n=this.satAxes,a=this.alignedSatBounds;if(t.min=i.x,t.max=s.x,a[0].isSeparated(t))return!1;if(t.min=i.y,t.max=s.y,a[1].isSeparated(t))return!1;if(t.min=i.z,t.max=s.z,a[2].isSeparated(t))return!1;for(let i=0;i<3;i++){const s=n[i],a=r[i];if(t.setFromBox(s,e),a.isSeparated(t))return!1}return!0}}(),ri.prototype.intersectsTriangle=function(){const t=new si,e=new Array(3),i=new Ke,s=new Ke,r=new d;return function(n){this.needsUpdate&&this.update(),n.isExtendedTriangle?n.needsUpdate&&n.update():(t.copy(n),t.update(),n=t);const a=this.satBounds,o=this.satAxes;e[0]=n.a,e[1]=n.b,e[2]=n.c;for(let t=0;t<3;t++){const s=a[t],r=o[t];if(i.setFromPoints(r,e),s.isSeparated(i))return!1}const h=n.satBounds,c=n.satAxes,l=this.points;for(let t=0;t<3;t++){const e=h[t],s=c[t];if(i.setFromPoints(s,l),e.isSeparated(i))return!1}for(let t=0;t<3;t++){const n=o[t];for(let t=0;t<4;t++){const a=c[t];if(r.crossVectors(n,a),i.setFromPoints(r,e),s.setFromPoints(r,l),i.isSeparated(s))return!1}}return!0}}(),ri.prototype.closestPointToPoint=function(t,e){return this.needsUpdate&&this.update(),e.copy(t).applyMatrix4(this.invMatrix).clamp(this.min,this.max).applyMatrix4(this.matrix),e},ri.prototype.distanceToPoint=function(){const t=new d;return function(e){return this.closestPointToPoint(e,t),e.distanceTo(t)}}(),ri.prototype.distanceToBox=function(){const t=["x","y","z"],e=new Array(12).fill().map(()=>new de),i=new Array(12).fill().map(()=>new de),s=new d,r=new d;return function(n,a=0,o=null,h=null){if(this.needsUpdate&&this.update(),this.intersectsBox(n))return(o||h)&&(n.getCenter(r),this.closestPointToPoint(r,s),n.closestPointToPoint(s,r),o&&o.copy(s),h&&h.copy(r)),0;const c=a*a,l=n.min,u=n.max,d=this.points;let m=1/0;for(let t=0;t<8;t++){const e=d[t];r.copy(e).clamp(l,u);const i=e.distanceToSquared(r);if(i<m&&(m=i,o&&o.copy(e),h&&h.copy(r),i<c))return Math.sqrt(i)}let p=0;for(let s=0;s<3;s++)for(let r=0;r<=1;r++)for(let n=0;n<=1;n++){const a=(s+1)%3,o=(s+2)%3,h=1<<s|r<<a|n<<o,c=d[r<<a|n<<o],m=d[h];e[p].set(c,m);const y=t[s],x=t[a],f=t[o],g=i[p],w=g.start,b=g.end;w[y]=l[y],w[x]=r?l[x]:u[x],w[f]=n?l[f]:u[x],b[y]=u[y],b[x]=r?l[x]:u[x],b[f]=n?l[f]:u[x],p++}for(let t=0;t<=1;t++)for(let e=0;e<=1;e++)for(let i=0;i<=1;i++){r.x=t?u.x:l.x,r.y=e?u.y:l.y,r.z=i?u.z:l.z,this.closestPointToPoint(r,s);const n=r.distanceToSquared(s);if(n<m&&(m=n,o&&o.copy(s),h&&h.copy(r),n<c))return Math.sqrt(n)}for(let t=0;t<12;t++){const n=e[t];for(let t=0;t<12;t++){const e=i[t];ti(n,e,s,r);const a=s.distanceToSquared(r);if(a<m&&(m=a,o&&o.copy(s),h&&h.copy(r),a<c))return Math.sqrt(a)}}return Math.sqrt(m)}}();class ni{constructor(t){this._getNewPrimitive=t,this._primitives=[]}getPrimitive(){const t=this._primitives;return 0===t.length?this._getNewPrimitive():t.pop()}releasePrimitive(t){this._primitives.push(t)}}class ai extends ni{constructor(){super(()=>new si)}}const oi=new ai;const hi=new class{constructor(){this.float32Array=null,this.uint16Array=null,this.uint32Array=null;const t=[];let e=null;this.setBuffer=i=>{e&&t.push(e),e=i,this.float32Array=new Float32Array(i),this.uint16Array=new Uint16Array(i),this.uint32Array=new Uint32Array(i)},this.clearBuffer=()=>{e=null,this.float32Array=null,this.uint16Array=null,this.uint32Array=null,0!==t.length&&this.setBuffer(t.pop())}}};let ci,li;const ui=[],di=new ni(()=>new F);function mi(t,e,i,s,r,n){ci=di.getPrimitive(),li=di.getPrimitive(),ui.push(ci,li),hi.setBuffer(t._roots[e]);const a=pi(0,t.geometry,i,s,r,n);hi.clearBuffer(),di.releasePrimitive(ci),di.releasePrimitive(li),ui.pop(),ui.pop();const o=ui.length;return o>0&&(li=ui[o-1],ci=ui[o-2]),a}function pi(t,e,i,s,r=null,n=0,a=0){const{float32Array:o,uint16Array:h,uint32Array:c}=hi;let l=2*t;if(Ue(l,h)){const u=Ie(t,c),d=qe(l,h);return ze(t,o,ci),s(u,d,!1,a,n+t,ci)}{const m=Oe(t),p=De(t,c);let y,x,f,g,w=m,b=p;if(r&&(f=ci,g=li,ze(w,o,f),ze(b,o,g),y=r(f),x=r(g),x<y)){w=p,b=m;const B=y;y=x,x=B,f=g}f||(f=ci,ze(w,o,f));const M=i(f,Ue(2*w,h),y,a+1,n+w);let z;if(2===M){const T=A(w);z=s(T,S(w)-T,!0,a+1,n+w,f)}else z=M&&pi(w,e,i,s,r,n,a+1);if(z)return!0;g=li,ze(b,o,g);const v=i(g,Ue(2*b,h),x,a+1,n+b);let _;if(2===v){const P=A(b);_=s(P,S(b)-P,!0,a+1,n+b,g)}else _=v&&pi(b,e,i,s,r,n,a+1);return!!_;function A(t){const{uint16Array:e,uint32Array:i}=hi;let s=2*t;for(;!Ue(s,e);)s=2*(t=Oe(t));return Ie(t,i)}function S(t){const{uint16Array:e,uint32Array:i}=hi;let s=2*t;for(;!Ue(s,e);)s=2*(t=De(t,i));return Ie(t,i)+qe(s,e)}}}const yi=new d,xi=new d;const fi=parseInt(t)>=169,gi=new d,wi=new d,bi=new d,Mi=new l,zi=new l,vi=new l,_i=new d,Ai=new d,Si=new d,Bi=new d;function Ti(t,e,i,s,r,n,a){const o=3*s;let h=o+0,c=o+1,u=o+2;const m=t.index;t.index&&(h=m.getX(h),c=m.getX(c),u=m.getX(u));const{position:p,normal:y,uv:x,uv1:f}=t.attributes,g=function(t,e,i,s,r,n,a,o,h,c,u){gi.fromBufferAttribute(e,n),wi.fromBufferAttribute(e,a),bi.fromBufferAttribute(e,o);const m=function(t,e,i,s,r,n,a,o){let h;if(h=1===n?t.intersectTriangle(s,i,e,!0,r):t.intersectTriangle(e,i,s,2!==n,r),null===h)return null;const c=t.origin.distanceTo(r);return c<a||c>o?null:{distance:c,point:r.clone()}}(t,gi,wi,bi,Bi,h,c,u);if(m){const e=new d;Gt.getBarycoord(Bi,gi,wi,bi,e),s&&(Mi.fromBufferAttribute(s,n),zi.fromBufferAttribute(s,a),vi.fromBufferAttribute(s,o),m.uv=Gt.getInterpolation(Bi,gi,wi,bi,Mi,zi,vi,new l)),r&&(Mi.fromBufferAttribute(r,n),zi.fromBufferAttribute(r,a),vi.fromBufferAttribute(r,o),m.uv1=Gt.getInterpolation(Bi,gi,wi,bi,Mi,zi,vi,new l)),i&&(_i.fromBufferAttribute(i,n),Ai.fromBufferAttribute(i,a),Si.fromBufferAttribute(i,o),m.normal=Gt.getInterpolation(Bi,gi,wi,bi,_i,Ai,Si,new d),m.normal.dot(t.direction)>0&&m.normal.multiplyScalar(-1));const h={a:n,b:a,c:o,normal:new d,materialIndex:0};Gt.getNormal(gi,wi,bi,h.normal),m.face=h,m.faceIndex=n,fi&&(m.barycoord=e)}return m}(i,p,y,x,f,h,c,u,e,n,a);return g?(g.faceIndex=s,r&&r.push(g),g):null}function Pi(t,e,i,s){const r=t.a,n=t.b,a=t.c;let o=e,h=e+1,c=e+2;i&&(o=i.getX(o),h=i.getX(h),c=i.getX(c)),r.x=s.getX(o),r.y=s.getY(o),r.z=s.getZ(o),n.x=s.getX(h),n.y=s.getY(h),n.z=s.getZ(h),a.x=s.getX(c),a.y=s.getY(c),a.z=s.getZ(c)}function Fi(t,e,i,s,r,n,a){const{geometry:o}=i,{index:h}=o,c=o.attributes.position;for(let i=t,o=e+t;i<o;i++){let t;if(t=i,Pi(a,3*t,h,c),a.needsUpdate=!0,s(a,t,r,n))return!0}return!1}function Vi(t,e=null){e&&Array.isArray(e)&&(e=new Set(e));const i=t.geometry,s=i.index?i.index.array:null,r=i.attributes.position;let n,a,o,h,c=0;const l=t._roots;for(let t=0,e=l.length;t<e;t++)n=l[t],a=new Uint32Array(n),o=new Uint16Array(n),h=new Float32Array(n),u(0,c),c+=n.byteLength;function u(t,i,n=!1){const c=2*t;if(o[c+15]===pe){const e=a[t+6];let i=1/0,n=1/0,l=1/0,u=-1/0,d=-1/0,m=-1/0;for(let t=3*e,a=3*(e+o[c+14]);t<a;t++){let e=s[t];const a=r.getX(e),o=r.getY(e),h=r.getZ(e);a<i&&(i=a),a>u&&(u=a),o<n&&(n=o),o>d&&(d=o),h<l&&(l=h),h>m&&(m=h)}return(h[t+0]!==i||h[t+1]!==n||h[t+2]!==l||h[t+3]!==u||h[t+4]!==d||h[t+5]!==m)&&(h[t+0]=i,h[t+1]=n,h[t+2]=l,h[t+3]=u,h[t+4]=d,h[t+5]=m,!0)}{const s=t+8,r=a[t+6],o=s+i,c=r+i;let l=n,d=!1,m=!1;e?l||(d=e.has(o),m=e.has(c),l=!d&&!m):(d=!0,m=!0);const p=l||m;let y=!1;(l||d)&&(y=u(s,i,l));let x=!1;p&&(x=u(r,i,l));const f=y||x;if(f)for(let e=0;e<3;e++){const i=s+e,n=r+e,a=h[i],o=h[i+3],c=h[n],l=h[n+3];h[t+e]=a<c?a:c,h[t+e+3]=o>l?o:l}return f}}}function Ci(t,e,i,s,r){let n,a,o,h,c,l;const u=1/i.direction.x,d=1/i.direction.y,m=1/i.direction.z,p=i.origin.x,y=i.origin.y,x=i.origin.z;let f=e[t],g=e[t+3],w=e[t+1],b=e[t+3+1],M=e[t+2],z=e[t+3+2];return u>=0?(n=(f-p)*u,a=(g-p)*u):(n=(g-p)*u,a=(f-p)*u),d>=0?(o=(w-y)*d,h=(b-y)*d):(o=(b-y)*d,h=(w-y)*d),!(n>h||o>a)&&((o>n||isNaN(n))&&(n=o),(h<a||isNaN(a))&&(a=h),m>=0?(c=(M-x)*m,l=(z-x)*m):(c=(z-x)*m,l=(M-x)*m),!(n>l||c>a)&&((c>n||n!=n)&&(n=c),(l<a||a!=a)&&(a=l),n<=r&&a>=s))}function Ei(t,e,i,s,r,n,a){const{geometry:o}=i,{index:h}=o,c=o.attributes.position;for(let o=t,l=e+t;o<l;o++){let t;if(t=i.resolveTriangleIndex(o),Pi(a,3*t,h,c),a.needsUpdate=!0,s(a,t,r,n))return!0}return!1}function ki(t,e,i,s,r,n,a){hi.setBuffer(t._roots[e]),Ui(0,t,i,s,r,n,a),hi.clearBuffer()}function Ui(t,e,i,s,r,n,a){const{float32Array:o,uint16Array:h,uint32Array:c}=hi,l=2*t;if(Ue(l,h)){!function(t,e,i,s,r,n,a,o){const{geometry:h,_indirectBuffer:c}=t;for(let t=s,c=s+r;t<c;t++)Ti(h,e,i,t,n,a,o)}(e,i,s,Ie(t,c),qe(l,h),r,n,a)}else{const h=Oe(t);Ci(h,o,s,n,a)&&Ui(h,e,i,s,r,n,a);const l=De(t,c);Ci(l,o,s,n,a)&&Ui(l,e,i,s,r,n,a)}}const Ii=["x","y","z"];function qi(t,e,i,s,r,n){hi.setBuffer(t._roots[e]);const a=Oi(0,t,i,s,r,n);return hi.clearBuffer(),a}function Oi(t,e,i,s,r,n){const{float32Array:a,uint16Array:o,uint32Array:h}=hi;let c=2*t;if(Ue(c,o)){return function(t,e,i,s,r,n,a){const{geometry:o,_indirectBuffer:h}=t;let c=1/0,l=null;for(let t=s,h=s+r;t<h;t++){let s;s=Ti(o,e,i,t,null,n,a),s&&s.distance<c&&(l=s,c=s.distance)}return l}(e,i,s,Ie(t,h),qe(c,o),r,n)}{const o=Re(t,h),c=Ii[o],l=s.direction[c]>=0;let u,d;l?(u=Oe(t),d=De(t,h)):(u=De(t,h),d=Oe(t));const m=Ci(u,a,s,r,n)?Oi(u,e,i,s,r,n):null;if(m){const t=m.point[c];if(l?t<=a[d+o]:t>=a[d+o+3])return m}const p=Ci(d,a,s,r,n)?Oi(d,e,i,s,r,n):null;return m&&p?m.distance<=p.distance?m:p:m||p||null}}const Di=new F,Ri=new si,Ni=new si,Xi=new st,Wi=new ri,Gi=new ri;function Yi(t,e,i,s){hi.setBuffer(t._roots[e]);const r=Li(0,t,i,s);return hi.clearBuffer(),r}function Li(t,e,i,s,r=null){const{float32Array:n,uint16Array:a,uint32Array:o}=hi;let h=2*t;null===r&&(i.boundingBox||i.computeBoundingBox(),Wi.set(i.boundingBox.min,i.boundingBox.max,s),r=Wi);if(!Ue(h,a)){const a=t+8,h=o[t+6];ze(a,n,Di);if(r.intersectsBox(Di)&&Li(a,e,i,s,r))return!0;ze(h,n,Di);return!!(r.intersectsBox(Di)&&Li(h,e,i,s,r))}{const r=e.geometry,c=r.index,l=r.attributes.position,u=i.index,d=i.attributes.position,m=Ie(t,o),p=qe(h,a);if(Xi.copy(s).invert(),i.boundsTree){ze(t,n,Gi),Gi.matrix.copy(Xi),Gi.needsUpdate=!0;return i.boundsTree.shapecast({intersectsBounds:t=>Gi.intersectsBox(t),intersectsTriangle:t=>{t.a.applyMatrix4(s),t.b.applyMatrix4(s),t.c.applyMatrix4(s),t.needsUpdate=!0;for(let e=3*m,i=3*(p+m);e<i;e+=3)if(Pi(Ni,e,c,l),Ni.needsUpdate=!0,t.intersectsTriangle(Ni))return!0;return!1}})}for(let t=3*m,e=3*(p+m);t<e;t+=3){Pi(Ri,t,c,l),Ri.a.applyMatrix4(Xi),Ri.b.applyMatrix4(Xi),Ri.c.applyMatrix4(Xi),Ri.needsUpdate=!0;for(let t=0,e=u.count;t<e;t+=3)if(Pi(Ni,t,u,d),Ni.needsUpdate=!0,Ri.intersectsTriangle(Ni))return!0}}}const ji=new st,Zi=new ri,Ji=new ri,Qi=new d,Hi=new d,Ki=new d,$i=new d;function ts(t,e,i,s={},r={},n=0,a=1/0){e.boundingBox||e.computeBoundingBox(),Zi.set(e.boundingBox.min,e.boundingBox.max,i),Zi.needsUpdate=!0;const o=t.geometry,h=o.attributes.position,c=o.index,l=e.attributes.position,u=e.index,d=oi.getPrimitive(),m=oi.getPrimitive();let p=Qi,y=Hi,x=null,f=null;r&&(x=Ki,f=$i);let g=1/0,w=null,b=null;return ji.copy(i).invert(),Ji.matrix.copy(ji),t.shapecast({boundsTraverseOrder:t=>Zi.distanceToBox(t),intersectsBounds:(t,e,i)=>i<g&&i<a&&(e&&(Ji.min.copy(t.min),Ji.max.copy(t.max),Ji.needsUpdate=!0),!0),intersectsRange:(t,s)=>{if(e.boundsTree){return e.boundsTree.shapecast({boundsTraverseOrder:t=>Ji.distanceToBox(t),intersectsBounds:(t,e,i)=>i<g&&i<a,intersectsRange:(e,r)=>{for(let a=e,o=e+r;a<o;a++){Pi(m,3*a,u,l),m.a.applyMatrix4(i),m.b.applyMatrix4(i),m.c.applyMatrix4(i),m.needsUpdate=!0;for(let e=t,i=t+s;e<i;e++){Pi(d,3*e,c,h),d.needsUpdate=!0;const t=d.distanceToTriangle(m,p,x);if(t<g&&(y.copy(p),f&&f.copy(x),g=t,w=e,b=a),t<n)return!0}}}})}for(let r=0,a=fe(e);r<a;r++){Pi(m,3*r,u,l),m.a.applyMatrix4(i),m.b.applyMatrix4(i),m.c.applyMatrix4(i),m.needsUpdate=!0;for(let e=t,i=t+s;e<i;e++){Pi(d,3*e,c,h),d.needsUpdate=!0;const t=d.distanceToTriangle(m,p,x);if(t<g&&(y.copy(p),f&&f.copy(x),g=t,w=e,b=r),t<n)return!0}}}}),oi.releasePrimitive(d),oi.releasePrimitive(m),g===1/0?null:(s.point?s.point.copy(y):s.point=y.clone(),s.distance=g,s.faceIndex=w,r&&(r.point?r.point.copy(f):r.point=f.clone(),r.point.applyMatrix4(ji),y.applyMatrix4(ji),r.distance=y.sub(r.point).length(),r.faceIndex=b),s)}function es(t,e=null){e&&Array.isArray(e)&&(e=new Set(e));const i=t.geometry,s=i.index?i.index.array:null,r=i.attributes.position;let n,a,o,h,c=0;const l=t._roots;for(let t=0,e=l.length;t<e;t++)n=l[t],a=new Uint32Array(n),o=new Uint16Array(n),h=new Float32Array(n),u(0,c),c+=n.byteLength;function u(i,n,c=!1){const l=2*i;if(o[l+15]===pe){const e=a[i+6];let n=1/0,c=1/0,u=1/0,d=-1/0,m=-1/0,p=-1/0;for(let i=e,a=e+o[l+14];i<a;i++){const e=3*t.resolveTriangleIndex(i);for(let t=0;t<3;t++){let i=e+t;i=s?s[i]:i;const a=r.getX(i),o=r.getY(i),h=r.getZ(i);a<n&&(n=a),a>d&&(d=a),o<c&&(c=o),o>m&&(m=o),h<u&&(u=h),h>p&&(p=h)}}return(h[i+0]!==n||h[i+1]!==c||h[i+2]!==u||h[i+3]!==d||h[i+4]!==m||h[i+5]!==p)&&(h[i+0]=n,h[i+1]=c,h[i+2]=u,h[i+3]=d,h[i+4]=m,h[i+5]=p,!0)}{const t=i+8,s=a[i+6],r=t+n,o=s+n;let l=c,d=!1,m=!1;e?l||(d=e.has(r),m=e.has(o),l=!d&&!m):(d=!0,m=!0);const p=l||m;let y=!1;(l||d)&&(y=u(t,n,l));let x=!1;p&&(x=u(s,n,l));const f=y||x;if(f)for(let e=0;e<3;e++){const r=t+e,n=s+e,a=h[r],o=h[r+3],c=h[n],l=h[n+3];h[i+e]=a<c?a:c,h[i+e+3]=o>l?o:l}return f}}}function is(t,e,i,s,r,n,a){hi.setBuffer(t._roots[e]),ss(0,t,i,s,r,n,a),hi.clearBuffer()}function ss(t,e,i,s,r,n,a){const{float32Array:o,uint16Array:h,uint32Array:c}=hi,l=2*t;if(Ue(l,h)){!function(t,e,i,s,r,n,a,o){const{geometry:h,_indirectBuffer:c}=t;for(let t=s,l=s+r;t<l;t++)Ti(h,e,i,c?c[t]:t,n,a,o)}(e,i,s,Ie(t,c),qe(l,h),r,n,a)}else{const h=Oe(t);Ci(h,o,s,n,a)&&ss(h,e,i,s,r,n,a);const l=De(t,c);Ci(l,o,s,n,a)&&ss(l,e,i,s,r,n,a)}}const rs=["x","y","z"];function ns(t,e,i,s,r,n){hi.setBuffer(t._roots[e]);const a=as(0,t,i,s,r,n);return hi.clearBuffer(),a}function as(t,e,i,s,r,n){const{float32Array:a,uint16Array:o,uint32Array:h}=hi;let c=2*t;if(Ue(c,o)){return function(t,e,i,s,r,n,a){const{geometry:o,_indirectBuffer:h}=t;let c=1/0,l=null;for(let t=s,u=s+r;t<u;t++){let s;s=Ti(o,e,i,h?h[t]:t,null,n,a),s&&s.distance<c&&(l=s,c=s.distance)}return l}(e,i,s,Ie(t,h),qe(c,o),r,n)}{const o=Re(t,h),c=rs[o],l=s.direction[c]>=0;let u,d;l?(u=Oe(t),d=De(t,h)):(u=De(t,h),d=Oe(t));const m=Ci(u,a,s,r,n)?as(u,e,i,s,r,n):null;if(m){const t=m.point[c];if(l?t<=a[d+o]:t>=a[d+o+3])return m}const p=Ci(d,a,s,r,n)?as(d,e,i,s,r,n):null;return m&&p?m.distance<=p.distance?m:p:m||p||null}}const os=new F,hs=new si,cs=new si,ls=new st,us=new ri,ds=new ri;function ms(t,e,i,s){hi.setBuffer(t._roots[e]);const r=ps(0,t,i,s);return hi.clearBuffer(),r}function ps(t,e,i,s,r=null){const{float32Array:n,uint16Array:a,uint32Array:o}=hi;let h=2*t;null===r&&(i.boundingBox||i.computeBoundingBox(),us.set(i.boundingBox.min,i.boundingBox.max,s),r=us);if(!Ue(h,a)){const a=t+8,h=o[t+6];ze(a,n,os);if(r.intersectsBox(os)&&ps(a,e,i,s,r))return!0;ze(h,n,os);return!!(r.intersectsBox(os)&&ps(h,e,i,s,r))}{const r=e.geometry,c=r.index,l=r.attributes.position,u=i.index,d=i.attributes.position,m=Ie(t,o),p=qe(h,a);if(ls.copy(s).invert(),i.boundsTree){ze(t,n,ds),ds.matrix.copy(ls),ds.needsUpdate=!0;return i.boundsTree.shapecast({intersectsBounds:t=>ds.intersectsBox(t),intersectsTriangle:t=>{t.a.applyMatrix4(s),t.b.applyMatrix4(s),t.c.applyMatrix4(s),t.needsUpdate=!0;for(let i=m,s=p+m;i<s;i++)if(Pi(cs,3*e.resolveTriangleIndex(i),c,l),cs.needsUpdate=!0,t.intersectsTriangle(cs))return!0;return!1}})}for(let t=m,i=p+m;t<i;t++){const i=e.resolveTriangleIndex(t);Pi(hs,3*i,c,l),hs.a.applyMatrix4(ls),hs.b.applyMatrix4(ls),hs.c.applyMatrix4(ls),hs.needsUpdate=!0;for(let t=0,e=u.count;t<e;t+=3)if(Pi(cs,t,u,d),cs.needsUpdate=!0,hs.intersectsTriangle(cs))return!0}}}const ys=new st,xs=new ri,fs=new ri,gs=new d,ws=new d,bs=new d,Ms=new d;function zs(t,e,i,s={},r={},n=0,a=1/0){e.boundingBox||e.computeBoundingBox(),xs.set(e.boundingBox.min,e.boundingBox.max,i),xs.needsUpdate=!0;const o=t.geometry,h=o.attributes.position,c=o.index,l=e.attributes.position,u=e.index,d=oi.getPrimitive(),m=oi.getPrimitive();let p=gs,y=ws,x=null,f=null;r&&(x=bs,f=Ms);let g=1/0,w=null,b=null;return ys.copy(i).invert(),fs.matrix.copy(ys),t.shapecast({boundsTraverseOrder:t=>xs.distanceToBox(t),intersectsBounds:(t,e,i)=>i<g&&i<a&&(e&&(fs.min.copy(t.min),fs.max.copy(t.max),fs.needsUpdate=!0),!0),intersectsRange:(s,r)=>{if(e.boundsTree){const o=e.boundsTree;return o.shapecast({boundsTraverseOrder:t=>fs.distanceToBox(t),intersectsBounds:(t,e,i)=>i<g&&i<a,intersectsRange:(e,a)=>{for(let M=e,z=e+a;M<z;M++){const e=o.resolveTriangleIndex(M);Pi(m,3*e,u,l),m.a.applyMatrix4(i),m.b.applyMatrix4(i),m.c.applyMatrix4(i),m.needsUpdate=!0;for(let e=s,i=s+r;e<i;e++){const i=t.resolveTriangleIndex(e);Pi(d,3*i,c,h),d.needsUpdate=!0;const s=d.distanceToTriangle(m,p,x);if(s<g&&(y.copy(p),f&&f.copy(x),g=s,w=e,b=M),s<n)return!0}}}})}for(let a=0,o=fe(e);a<o;a++){Pi(m,3*a,u,l),m.a.applyMatrix4(i),m.b.applyMatrix4(i),m.c.applyMatrix4(i),m.needsUpdate=!0;for(let e=s,i=s+r;e<i;e++){const i=t.resolveTriangleIndex(e);Pi(d,3*i,c,h),d.needsUpdate=!0;const s=d.distanceToTriangle(m,p,x);if(s<g&&(y.copy(p),f&&f.copy(x),g=s,w=e,b=a),s<n)return!0}}}}),oi.releasePrimitive(d),oi.releasePrimitive(m),g===1/0?null:(s.point?s.point.copy(y):s.point=y.clone(),s.distance=g,s.faceIndex=w,r&&(r.point?r.point.copy(f):r.point=f.clone(),r.point.applyMatrix4(ys),y.applyMatrix4(ys),r.distance=y.sub(r.point).length(),r.faceIndex=b),s)}const vs=new hi.constructor,_s=new hi.constructor,As=new ni(()=>new F),Ss=new F,Bs=new F,Ts=new F,Ps=new F;let Fs=!1;function Vs(t,e,i,s,r,n=0,a=0,o=0,h=0,c=null,l=!1){let u,d;l?(u=_s,d=vs):(u=vs,d=_s);const m=u.float32Array,p=u.uint32Array,y=u.uint16Array,x=d.float32Array,f=d.uint32Array,g=d.uint16Array,w=2*e,b=Ue(2*t,y),M=Ue(w,g);let z=!1;if(M&&b)z=l?r(Ie(e,f),qe(2*e,g),Ie(t,p),qe(2*t,y),h,a+e,o,n+t):r(Ie(t,p),qe(2*t,y),Ie(e,f),qe(2*e,g),o,n+t,h,a+e);else if(M){const c=As.getPrimitive();ze(e,x,c),c.applyMatrix4(i);const u=Oe(t),d=De(t,p);ze(u,m,Ss),ze(d,m,Bs);const y=c.intersectsBox(Ss),f=c.intersectsBox(Bs);z=y&&Vs(e,u,s,i,r,a,n,h,o+1,c,!l)||f&&Vs(e,d,s,i,r,a,n,h,o+1,c,!l),As.releasePrimitive(c)}else{const u=Oe(e),d=De(e,f);ze(u,x,Ts),ze(d,x,Ps);const y=c.intersectsBox(Ts),g=c.intersectsBox(Ps);if(y&&g)z=Vs(t,u,i,s,r,n,a,o,h+1,c,l)||Vs(t,d,i,s,r,n,a,o,h+1,c,l);else if(y)if(b)z=Vs(t,u,i,s,r,n,a,o,h+1,c,l);else{const e=As.getPrimitive();e.copy(Ts).applyMatrix4(i);const c=Oe(t),d=De(t,p);ze(c,m,Ss),ze(d,m,Bs);const y=e.intersectsBox(Ss),x=e.intersectsBox(Bs);z=y&&Vs(u,c,s,i,r,a,n,h,o+1,e,!l)||x&&Vs(u,d,s,i,r,a,n,h,o+1,e,!l),As.releasePrimitive(e)}else if(g)if(b)z=Vs(t,d,i,s,r,n,a,o,h+1,c,l);else{const e=As.getPrimitive();e.copy(Ps).applyMatrix4(i);const c=Oe(t),u=De(t,p);ze(c,m,Ss),ze(u,m,Bs);const y=e.intersectsBox(Ss),x=e.intersectsBox(Bs);z=y&&Vs(d,c,s,i,r,a,n,h,o+1,e,!l)||x&&Vs(d,u,s,i,r,a,n,h,o+1,e,!l),As.releasePrimitive(e)}}return z}const Cs=new ri,Es=new F,ks={strategy:0,maxDepth:40,maxLeafTris:10,useSharedArrayBuffer:!1,setBoundingBox:!0,onProgress:null,indirect:!1,verbose:!0,range:null};class Us{static serialize(t,e={}){e={cloneBuffers:!0,...e};const i=t.geometry,s=t._roots,r=t._indirectBuffer,n=i.getIndex();let a;return a=e.cloneBuffers?{roots:s.map(t=>t.slice()),index:n?n.array.slice():null,indirectBuffer:r?r.slice():null}:{roots:s,index:n?n.array:null,indirectBuffer:r},a}static deserialize(t,e,i={}){i={setIndex:!0,indirect:Boolean(t.indirectBuffer),...i};const{index:s,roots:r,indirectBuffer:n}=t,a=new Us(e,{...i,[xe]:!0});if(a._roots=r,a._indirectBuffer=n||null,i.setIndex){const i=e.getIndex();if(null===i){const i=new Zt(t.index,1,!1);e.setIndex(i)}else i.array!==s&&(i.array.set(s),i.needsUpdate=!0)}return a}get indirect(){return!!this._indirectBuffer}constructor(t,e={}){if(!t.isBufferGeometry)throw new Error("MeshBVH: Only BufferGeometries are supported.");if(t.index&&t.index.isInterleavedBufferAttribute)throw new Error("MeshBVH: InterleavedBufferAttribute is not supported for the index attribute.");if((e=Object.assign({...ks,[xe]:!1},e)).useSharedArrayBuffer&&"undefined"==typeof SharedArrayBuffer)throw new Error("MeshBVH: SharedArrayBuffer is not available.");this.geometry=t,this._roots=null,this._indirectBuffer=null,e[xe]||(He(this,e),!t.boundingBox&&e.setBoundingBox&&(t.boundingBox=this.getBoundingBox(new F))),this.resolveTriangleIndex=e.indirect?t=>this._indirectBuffer[t]:t=>t}refit(t=null){return(this.indirect?es:Vi)(this,t)}traverse(t,e=0){const i=this._roots[e],s=new Uint32Array(i),r=new Uint16Array(i);!function e(n,a=0){const o=2*n,h=r[o+15]===pe;if(h){const e=s[n+6],c=r[o+14];t(a,h,new Float32Array(i,4*n,6),e,c)}else{const r=n+8,o=s[n+6],c=s[n+7];t(a,h,new Float32Array(i,4*n,6),c)||(e(r,a+1),e(o,a+1))}}(0)}raycast(t,e=0,i=0,s=1/0){const r=this._roots,n=this.geometry,a=[],o=e.isMaterial,h=Array.isArray(e),c=n.groups,l=o?e.side:e,u=this.indirect?is:ki;for(let n=0,o=r.length;n<o;n++){const r=h?e[c[n].materialIndex].side:l,o=a.length;if(u(this,n,r,t,a,i,s),h){const t=c[n].materialIndex;for(let e=o,i=a.length;e<i;e++)a[e].face.materialIndex=t}}return a}raycastFirst(t,e=0,i=0,s=1/0){const r=this._roots,n=this.geometry,a=e.isMaterial,o=Array.isArray(e);let h=null;const c=n.groups,l=a?e.side:e,u=this.indirect?ns:qi;for(let n=0,a=r.length;n<a;n++){const r=u(this,n,o?e[c[n].materialIndex].side:l,t,i,s);null!=r&&(null==h||r.distance<h.distance)&&(h=r,o&&(r.face.materialIndex=c[n].materialIndex))}return h}intersectsGeometry(t,e){let i=!1;const s=this._roots,r=this.indirect?ms:Yi;for(let n=0,a=s.length;n<a&&(i=r(this,n,t,e),!i);n++);return i}shapecast(t){const e=oi.getPrimitive(),i=this.indirect?Ei:Fi;let{boundsTraverseOrder:s,intersectsBounds:r,intersectsRange:n,intersectsTriangle:a}=t;if(n&&a){const t=n;n=(s,r,n,o,h)=>!!t(s,r,n,o,h)||i(s,r,this,a,n,o,e)}else n||(n=a?(t,s,r,n)=>i(t,s,this,a,r,n,e):(t,e,i)=>i);let o=!1,h=0;const c=this._roots;for(let t=0,e=c.length;t<e;t++){const e=c[t];if(o=mi(this,t,r,n,s,h),o)break;h+=e.byteLength}return oi.releasePrimitive(e),o}bvhcast(t,e,i){let{intersectsRanges:s,intersectsTriangles:r}=i;const n=oi.getPrimitive(),a=this.geometry.index,o=this.geometry.attributes.position,h=this.indirect?t=>{const e=this.resolveTriangleIndex(t);Pi(n,3*e,a,o)}:t=>{Pi(n,3*t,a,o)},c=oi.getPrimitive(),l=t.geometry.index,u=t.geometry.attributes.position,d=t.indirect?e=>{const i=t.resolveTriangleIndex(e);Pi(c,3*i,l,u)}:t=>{Pi(c,3*t,l,u)};if(r){const t=(t,i,s,a,o,l,u,m)=>{for(let p=s,y=s+a;p<y;p++){d(p),c.a.applyMatrix4(e),c.b.applyMatrix4(e),c.c.applyMatrix4(e),c.needsUpdate=!0;for(let e=t,s=t+i;e<s;e++)if(h(e),n.needsUpdate=!0,r(n,c,e,p,o,l,u,m))return!0}return!1};if(s){const e=s;s=function(i,s,r,n,a,o,h,c){return!!e(i,s,r,n,a,o,h,c)||t(i,s,r,n,a,o,h,c)}}else s=t}return function(t,e,i,s){if(Fs)throw new Error("MeshBVH: Recursive calls to bvhcast not supported.");Fs=!0;const r=t._roots,n=e._roots;let a,o=0,h=0;const c=(new st).copy(i).invert();for(let t=0,e=r.length;t<e;t++){vs.setBuffer(r[t]),h=0;const e=As.getPrimitive();ze(Ne(0),vs.float32Array,e),e.applyMatrix4(c);for(let t=0,r=n.length;t<r&&(_s.setBuffer(n[t]),a=Vs(0,0,i,c,s,o,h,0,0,e),_s.clearBuffer(),h+=n[t].length,!a);t++);if(As.releasePrimitive(e),vs.clearBuffer(),o+=r[t].length,a)break}return Fs=!1,a}(this,t,e,s)}intersectsBox(t,e){return Cs.set(t.min,t.max,e),Cs.needsUpdate=!0,this.shapecast({intersectsBounds:t=>Cs.intersectsBox(t),intersectsTriangle:t=>Cs.intersectsTriangle(t)})}intersectsSphere(t){return this.shapecast({intersectsBounds:e=>t.intersectsBox(e),intersectsTriangle:e=>e.intersectsSphere(t)})}closestPointToGeometry(t,e,i={},s={},r=0,n=1/0){return(this.indirect?zs:ts)(this,t,e,i,s,r,n)}closestPointToPoint(t,e={},i=0,s=1/0){return function(t,e,i={},s=0,r=1/0){const n=s*s,a=r*r;let o=1/0,h=null;if(t.shapecast({boundsTraverseOrder:t=>(yi.copy(e).clamp(t.min,t.max),yi.distanceToSquared(e)),intersectsBounds:(t,e,i)=>i<o&&i<a,intersectsTriangle:(t,i)=>{t.closestPointToPoint(e,yi);const s=e.distanceToSquared(yi);return s<o&&(xi.copy(yi),o=s,h=i),s<n}}),o===1/0)return null;const c=Math.sqrt(o);return i.point?i.point.copy(xi):i.point=xi.clone(),i.distance=c,i.faceIndex=h,i}(this,t,e,i,s)}getBoundingBox(t){t.makeEmpty();return this._roots.forEach(e=>{ze(0,new Float32Array(e),Es),t.union(Es)}),t}}const Is="static",qs="kinematic";class Os{constructor(){this.environments=new Map,this.staticEnvironments=[],this.kinematicEnvironments=[],this.maxDropDistance=2,this.tempRay=new it,this.tempVector3_1=new d,this.tempVector3_2=new d,this.tempQuaternion_1=new u,this.tempQuaternion_2=new u,this.tempMatrix4_1=new st,this.tempMatrix4_2=new st,this.tempBox=new F}addEnvironment(t,e,i,s=Is,r=new st){if(this.environments.has(t))return;const n=new ne;n.setAttribute("position",new Zt(e instanceof Array?new Float32Array(e):e,3)),n.setIndex(new Zt(i instanceof Array?new Uint32Array(i):i,1));const a=new Us(n),o=new F;o.copy(a.geometry.boundingBox),o.applyMatrix4(r);const h={handle:t,bvh:a,type:s,worldMatrix:r.clone(),worldBounds:o,metadata:s===qs?{deltaPos:new d,deltaQuat:new u,velocity:new d,angularVelocity:new d,lastPosition:new d,lastQuaternion:new u,position:new d,quaternion:new u}:void 0};this.environments.set(t,h),this.updateEnvironmentArrays()}removeEnvironment(t){this.environments.delete(t)&&this.updateEnvironmentArrays()}getEnvironments(){return Array.from(this.environments.values())}getStaticEnvironments(){return this.staticEnvironments}getKinematicEnvironments(){return this.kinematicEnvironments}updateKinematicPlatform(t,e){const i=this.environments.get(t);i&&i.type===qs&&i.metadata&&(e.decompose(this.tempVector3_1,this.tempQuaternion_1,this.tempVector3_2),i.metadata.deltaPos.subVectors(this.tempVector3_1,i.metadata.lastPosition),this.tempQuaternion_2.copy(i.metadata.lastQuaternion).invert(),i.metadata.deltaQuat.multiplyQuaternions(this.tempQuaternion_1,this.tempQuaternion_2),i.metadata.position.copy(this.tempVector3_1),i.metadata.quaternion.copy(this.tempQuaternion_1),i.worldMatrix.copy(e),i.metadata.lastPosition.copy(this.tempVector3_1),i.metadata.lastQuaternion.copy(this.tempQuaternion_1),i.worldBounds.copy(i.bvh.geometry.boundingBox),i.worldBounds.applyMatrix4(i.worldMatrix))}updateKinematicPlatforms(t){for(const e of this.kinematicEnvironments)e.metadata&&e.metadata.position&&e.metadata.quaternion&&(e.metadata.deltaPos.subVectors(e.metadata.position,e.metadata.lastPosition),this.tempQuaternion_1.copy(e.metadata.lastQuaternion).invert(),e.metadata.deltaQuat.multiplyQuaternions(e.metadata.quaternion,this.tempQuaternion_1),t>0&&e.metadata.velocity.copy(e.metadata.deltaPos).multiplyScalar(1/t),e.metadata.lastPosition.copy(e.metadata.position),e.metadata.lastQuaternion.copy(e.metadata.quaternion),e.metadata.deltaPos.lengthSq()>1e-6&&e.bvh.refit())}getEnvironment(t){return this.environments.get(t)}hasEnvironment(t){return this.environments.has(t)}raycastEnvironment(t,e,i=0,s=1/0){this.tempMatrix4_1.copy(t.worldMatrix).invert(),this.tempRay.copy(e),this.tempRay.applyMatrix4(this.tempMatrix4_1);const r=t.bvh.raycastFirst(this.tempRay,0,i,s);return r&&r.face&&(r.point.applyMatrix4(t.worldMatrix),this.tempMatrix4_2.copy(t.worldMatrix).invert().transpose(),r.face.normal.transformDirection(this.tempMatrix4_2),r.face.normal.normalize(),r.distance=r.point.distanceTo(e.origin)),r}clear(){this.environments.clear(),this.staticEnvironments.length=0,this.kinematicEnvironments.length=0}updateEnvironmentArrays(){this.staticEnvironments.length=0,this.kinematicEnvironments.length=0;for(const t of this.environments.values())t.type===Is?this.staticEnvironments.push(t):this.kinematicEnvironments.push(t)}setMaxDropDistance(t){this.maxDropDistance=t}getMinY(t){return t-this.maxDropDistance}getEnvironmentsForTrajectory(t,e,i,s){return function(t,e,i,s,r){const n=.5*s,a=e.y,o=a*a-4*n*(t.y-i),h=(-a+Math.sqrt(o))/(2*n),c=-e.y/s>0?t.y+e.y*e.y/(2*Math.abs(s)):t.y,l=t.x+e.x*h,u=t.z+e.z*h;r.min.set(Math.min(t.x,l),i,Math.min(t.z,u)),r.max.set(Math.max(t.x,l),Math.max(t.y,c),Math.max(t.z,u))}(t,e,i,s,this.tempBox),Array.from(this.environments.values()).filter(t=>t.worldBounds.intersectsBox(this.tempBox))}}class Ds{constructor(){this.tempSegment=new de,this.tempPosition=new d,this.positionDelta=new d,this.aabbox=new F,this.rayVector=new d,this.localSegment=new de,this.localTriPoint=new d,this.localCapsulePoint=new d,this.tempMatrix4=new st}handleCapsuleCollision(t,e,i,s){this.tempSegment.copy(e.segment),this.tempSegment.start.add(i),this.tempSegment.end.add(i);for(const i of t)this.shapecastCapsule(this.tempSegment,e.radius,i);if(this.tempPosition.copy(this.tempSegment.start).sub(e.segment.start),this.positionDelta.copy(this.tempPosition).sub(i),this.positionDelta.length()>1e-5){this.rayVector.copy(this.positionDelta).normalize();const t=s.dot(this.rayVector);t<0&&s.addScaledVector(this.rayVector,-t)}return this.tempPosition}shapecastCapsule(t,e,i){this.tempMatrix4.copy(i.worldMatrix).invert(),this.localSegment.copy(t),this.localSegment.start.applyMatrix4(this.tempMatrix4),this.localSegment.end.applyMatrix4(this.tempMatrix4),this.aabbox.makeEmpty(),this.aabbox.expandByPoint(this.localSegment.start),this.aabbox.expandByPoint(this.localSegment.end),this.aabbox.min.addScalar(-e),this.aabbox.max.addScalar(e),i.bvh.shapecast({intersectsBounds:t=>t.intersectsBox(this.aabbox),intersectsTriangle:s=>{const r=s.closestPointToSegment(this.localSegment,this.localTriPoint,this.localCapsulePoint);if(r<e){const s=e-r;this.rayVector.copy(this.localCapsulePoint).sub(this.localTriPoint).normalize(),this.localSegment.start.addScaledVector(this.rayVector,s),this.localSegment.end.addScaledVector(this.rayVector,s),t.start.copy(this.localSegment.start).applyMatrix4(i.worldMatrix),t.end.copy(this.localSegment.end).applyMatrix4(i.worldMatrix)}}})}}class Rs{static calculateSpringForce(t,e){return e*t}static calculateDampingForce(t,e){return e*t}static clampForce(t,e){return Math.max(-e,Math.min(e,t))}static applyGravity(t,e,i,s,r){t.addScaledVector(e,i*s*r)}static applyFloatingForce(t,e,i,s,r,n,a){const o=i-s,h=Rs.clampForce(o,r)*a/n;t.addScaledVector(e,h)}static calculateTargetDistance(t,e){return t+e}static isGrounded(t,e){return t<e}static calculateGroundingThreshold(t,e,i=.15){return t+e+i}static isWalkableSlope(t,e,i){return t.angleTo(e)<i}static capVelocity(t,e){t.lengthSq()>e*e&&t.normalize().multiplyScalar(e)}}class Ns{constructor(t,e,i){this.gravityDir=t,this.upAxis=e,this.environmentManager=i,this.ray=new it,this.tempPosition=new d,this.tempGroundInfo={isGrounded:!1,distance:1/0,contactPoint:new d,normal:new d(0,1,0),environment:void 0}}detectGround(t,e,i,s,r){this.tempGroundInfo.isGrounded=!1,this.tempGroundInfo.distance=1/0,this.tempGroundInfo.environment=void 0,this.tempPosition.copy(e),this.tempPosition.y+=i;const n=s+i+.1,a=Math.max(n,Math.abs(e.y)+5);this.ray.origin.copy(this.tempPosition),this.ray.direction.copy(this.gravityDir);let o=null,h=null;for(const e of t){const t=this.environmentManager.raycastEnvironment(e,this.ray,0,a);t&&t.face&&(!o||t.distance<o.distance)&&(o=t,h=e)}if(o&&o.face&&h&&(this.tempGroundInfo.contactPoint.copy(o.point),this.tempGroundInfo.normal.copy(o.face.normal),this.tempGroundInfo.distance=o.distance,this.tempGroundInfo.environment=h,Rs.isWalkableSlope(this.tempGroundInfo.normal,this.upAxis,r))){const t=Rs.calculateGroundingThreshold(s,i);this.tempGroundInfo.isGrounded=Rs.isGrounded(this.tempGroundInfo.distance,t)}return this.tempGroundInfo}applyPlatformVelocity(t,e){var i,s;(null===(i=e.environment)||void 0===i?void 0:i.type)===qs&&(null===(s=e.environment.metadata)||void 0===s?void 0:s.velocity)&&t.add(e.environment.metadata.velocity)}}class Xs{constructor(t){this.config=t,this.targetVelocity=new d,this.velocityOnPlane=new d,this.deltaVelocity=new d,this.upAxis=new d(0,1,0)}handleMovementInput(t,e,i,s){if(t.lengthSq()>0){this.targetVelocity.copy(t),this.velocityOnPlane.copy(e).projectOnPlane(this.upAxis),this.deltaVelocity.subVectors(this.targetVelocity,this.velocityOnPlane);const r=i?1:this.config.airDragFactor,n=this.config.acceleration*r*s;this.deltaVelocity.clampLength(0,n),e.add(this.deltaVelocity)}else{this.velocityOnPlane.copy(e).projectOnPlane(this.upAxis);const t=i?1:.7,r=this.config.deceleration*t*s;this.deltaVelocity.copy(this.velocityOnPlane).clampLength(0,r),e.sub(this.deltaVelocity)}}updateConfig(t){Object.assign(this.config,t)}}class Ws{constructor(t){this.playerPosition=new d,this.playerVelocity=new d,this.movementVector=new d,this.ray=new it,this.capsuleInfo={radius:.5,segment:new de(new d(0,1.5,0),new d(0,.5,0))},this.lastUpdateTime=0,this.rayPoints=new Array,this.rayVector=new d,this.upAxis=new d(0,1,0),this.gravityDir=new d(0,-1,0),this.groundDecel=8,this.positionUpdateTimeout=.5,this.gravity=9.81,this.rayGravity=-.4,this.updating=!1,this.isGrounded=!1,this.isGroundedOnStatic=!1,this.maxDropDistance=2,this.jumpHeight=1.5,this.jumpCooldown=.1,this.lastJumpTime=0,this.acceleration=100,this.deceleration=100,this.airDragFactor=.3,this.maxWalkSpeed=3,this.mass=1,this.floatHeight=.01,this.floatSensorRadius=.12,this.floatSpringK=30,this.floatDampingC=8,this.maxSlope=1,this.playerPosition.copy(t);for(let t=0;t<10;t++)this.rayPoints.push(new d);this.environmentManager=new Os,this.groundDetector=new Ns(this.gravityDir,this.upAxis,this.environmentManager),this.collisionHandler=new Ds,this.movementController=new Xs({acceleration:this.acceleration,deceleration:this.deceleration,airDragFactor:this.airDragFactor,maxWalkSpeed:this.maxWalkSpeed}),this.environmentManager.setMaxDropDistance(this.maxDropDistance)}slide(t){this.movementVector.copy(t),this.updating=!0,this.lastUpdateTime=performance.now()}teleport(t){this.playerPosition.copy(t),this.playerVelocity.set(0,0,0),this.updating=!0,this.lastUpdateTime=performance.now()}raycast(t,e,i){let s;this.ray.origin.copy(t),this.ray.direction.copy(e);for(const t of this.environmentManager.getEnvironments()){const e=this.environmentManager.raycastEnvironment(t,this.ray,0,i);e&&(!s||e.distance<s.distance)&&(s=e)}return s}raycastRelevantEnvironments(t,e,i,s){let r;this.ray.origin.copy(t),this.ray.direction.copy(e);for(const t of s){const e=this.environmentManager.raycastEnvironment(t,this.ray,0,i);e&&(!r||e.distance<r.distance)&&(r=e)}return r}parabolicRaycast(t,e){let i;const s=this.environmentManager.getMinY(this.playerPosition.y),r=this.environmentManager.getEnvironmentsForTrajectory(t,e,s,this.rayGravity);!function(t,e,i,s,r,n=0){const a=.5*s,o=e.y,h=o*o-4*a*(t.y-i),c=(-o+Math.sqrt(h))/(2*a),l=r.length;for(let i=n;i<l+n;i++){const a=i/(n+l-1)*c,o=t.x+e.x*a,h=t.y+e.y*a+.5*s*a*a,u=t.z+e.z*a;r[i-n].set(o,h,u)}}(t,e,s,this.rayGravity,this.rayPoints);for(let t=0;t<this.rayPoints.length-1;t++){this.rayVector.copy(this.rayPoints[t+1]).sub(this.rayPoints[t]);const e=this.rayVector.length();if(i=this.raycastRelevantEnvironments(this.rayPoints[t],this.rayVector.normalize(),e,r),i)break}return i}update(t){this.environmentManager.updateKinematicPlatforms(t),this.updating&&(this.isGroundedOnStatic&&performance.now()-this.lastUpdateTime>1e3*this.positionUpdateTimeout?this.updating=!1:this.updatePlayerPosition(t))}updatePlayerPosition(t){if(this.handleMovementPhysics(t),this.applyGravity(t),this.handleGroundContact(t),this.handleCollisions(),this.playerPosition.y>100)return this.playerPosition.set(0,2,0),void this.playerVelocity.set(0,0,0);Rs.capVelocity(this.playerVelocity,20),this.playerPosition.addScaledVector(this.playerVelocity,t)}handleMovementPhysics(t){this.movementController.handleMovementInput(this.movementVector,this.playerVelocity,this.isGrounded,t)}applyGravity(t){if(!this.isGrounded){const e=this.playerPosition.y>10?3:1;Rs.applyGravity(this.playerVelocity,this.gravityDir,this.gravity,e,t)}}handleGroundContact(t){var e,i;const s=this.groundDetector.detectGround(this.environmentManager.getEnvironments(),this.playerPosition,this.capsuleInfo.radius,this.floatHeight,this.maxSlope);if(this.isGrounded=s.isGrounded,this.isGroundedOnStatic=this.isGrounded&&(null===(e=s.environment)||void 0===e?void 0:e.type)===Is,this.isGrounded&&(null===(i=s.environment)||void 0===i?void 0:i.type)===qs&&this.groundDetector.applyPlatformVelocity(this.playerVelocity,s),s.distance<1/0&&this.isGrounded){const e=Rs.calculateTargetDistance(this.floatHeight,this.capsuleInfo.radius)-s.distance,i=Rs.calculateSpringForce(e,this.floatSpringK),r=this.playerVelocity.dot(this.upAxis),n=Rs.calculateDampingForce(r,this.floatDampingC);Rs.applyFloatingForce(this.playerVelocity,this.upAxis,i,n,50,this.mass,t)}}handleCollisions(){const t=this.collisionHandler.handleCapsuleCollision(this.environmentManager.getEnvironments(),this.capsuleInfo,this.playerPosition,this.playerVelocity);t.equals(this.playerPosition)||this.playerPosition.copy(t)}addEnvironment(t,e,i,s=Is,r=new st){this.environmentManager.addEnvironment(t,e,i,s,r)}removeEnvironment(t){this.environmentManager.removeEnvironment(t)}updateKinematicPlatform(t,e){this.environmentManager.updateKinematicPlatform(t,e)}setMaxDropDistance(t){this.maxDropDistance=t,this.environmentManager.setMaxDropDistance(t)}jump(){const t=performance.now()/1e3;if(!(this.isGrounded&&t-this.lastJumpTime>this.jumpCooldown))return;const e=Math.sqrt(2*this.gravity*this.jumpHeight);this.playerVelocity.y=e,this.isGrounded=!1,this.lastJumpTime=t,this.updating=!0}getEnvironmentManager(){return this.environmentManager}}var Gs;let Ys;!function(t){t[t.Init=0]="Init",t[t.Config=1]="Config",t[t.Slide=2]="Slide",t[t.Teleport=3]="Teleport",t[t.ParabolicRaycast=4]="ParabolicRaycast",t[t.PositionUpdate=5]="PositionUpdate",t[t.RaycastUpdate=6]="RaycastUpdate",t[t.AddEnvironment=7]="AddEnvironment",t[t.RemoveEnvironment=8]="RemoveEnvironment",t[t.UpdateKinematicEnvironment=9]="UpdateKinematicEnvironment",t[t.Jump=10]="Jump"}(Gs||(Gs={}));let Ls=60;const js=new d,Zs=new d,Js=new st,Qs=new Set;onmessage=function(t){if(t.data instanceof Array){switch(t.data[0]){case Gs.Slide:null==Ys||Ys.slide(js.fromArray(t.data,1));break;case Gs.Teleport:null==Ys||Ys.teleport(js.fromArray(t.data,1));break;case Gs.ParabolicRaycast:{const e=null==Ys?void 0:Ys.parabolicRaycast(js.fromArray(t.data,1),Zs.fromArray(t.data,4)),i=new Array(7).fill(NaN);i[0]=Gs.RaycastUpdate,e&&(e.point.toArray(i,1),e.face&&e.face.normal.toArray(i,4)),self.postMessage(i);break}case Gs.UpdateKinematicEnvironment:{const e=t.data[1];if(Ys&&Qs.has(e)){const i=t.data.slice(2,18),s=Js.fromArray(i);Ys.updateKinematicPlatform(e,s)}break}case Gs.Jump:null==Ys||Ys.jump()}}else{const{type:e,payload:i}=t.data;switch(e){case Gs.Init:Ys=new Ws(js.fromArray(i.initialPlayerPosition));break;case Gs.AddEnvironment:if(Ys&&i.handle&&i.positions&&i.indices){Qs.add(i.handle);const t=i.worldMatrix?Js.fromArray(i.worldMatrix):new st;Ys.addEnvironment(i.handle,i.positions,i.indices,i.type||"STATIC",t)}break;case Gs.RemoveEnvironment:Ys&&i.handle&&(Qs.delete(i.handle),Ys.removeEnvironment(i.handle));break;case Gs.Config:void 0!==i.rayGravity&&(Ys.rayGravity=i.rayGravity),void 0!==i.maxDropDistance&&Ys.setMaxDropDistance(i.maxDropDistance),void 0!==i.jumpHeight&&(Ys.jumpHeight=i.jumpHeight),void 0!==i.jumpCooldown&&(Ys.jumpCooldown=i.jumpCooldown),void 0!==i.updateFrequency&&(Ls=i.updateFrequency)}}},function t(){if(null==Ys||Ys.update(1/Ls),null==Ys?void 0:Ys.updating){const t=new Array(7).fill(NaN);t[0]=Gs.PositionUpdate,Ys.playerPosition.toArray(t,1),t[5]=Ys.isGrounded?1:0,self.postMessage(t)}setTimeout(t,1e3/Ls)}()}();
";export{d as url};
